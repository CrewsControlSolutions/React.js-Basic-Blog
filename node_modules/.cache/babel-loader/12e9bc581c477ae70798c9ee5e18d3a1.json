{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar value_types_1 = require(\"./value-types\");\n\nvar InsertData_1 = require(\"./InsertData\");\n\nvar DeltaInsertOp = function () {\n  function DeltaInsertOp(insertVal, attrs) {\n    if (typeof insertVal === 'string') {\n      insertVal = new InsertData_1.InsertDataQuill(value_types_1.DataType.Text, insertVal + '');\n    }\n\n    this.insert = insertVal;\n    this.attributes = attrs || {};\n  }\n\n  DeltaInsertOp.createNewLineOp = function () {\n    return new DeltaInsertOp(value_types_1.NewLine);\n  };\n\n  DeltaInsertOp.prototype.isContainerBlock = function () {\n    var attrs = this.attributes;\n    return !!(attrs.blockquote || attrs.list || attrs.table || attrs['code-block'] || attrs.header || attrs.align || attrs.direction || attrs.indent);\n  };\n\n  DeltaInsertOp.prototype.isBlockquote = function () {\n    return !!this.attributes.blockquote;\n  };\n\n  DeltaInsertOp.prototype.isHeader = function () {\n    return !!this.attributes.header;\n  };\n\n  DeltaInsertOp.prototype.isTable = function () {\n    return !!this.attributes.table;\n  };\n\n  DeltaInsertOp.prototype.isSameHeaderAs = function (op) {\n    return op.attributes.header === this.attributes.header && this.isHeader();\n  };\n\n  DeltaInsertOp.prototype.hasSameAdiAs = function (op) {\n    return this.attributes.align === op.attributes.align && this.attributes.direction === op.attributes.direction && this.attributes.indent === op.attributes.indent;\n  };\n\n  DeltaInsertOp.prototype.hasSameIndentationAs = function (op) {\n    return this.attributes.indent === op.attributes.indent;\n  };\n\n  DeltaInsertOp.prototype.hasHigherIndentThan = function (op) {\n    return (Number(this.attributes.indent) || 0) > (Number(op.attributes.indent) || 0);\n  };\n\n  DeltaInsertOp.prototype.isInline = function () {\n    return !(this.isContainerBlock() || this.isVideo() || this.isCustomBlock());\n  };\n\n  DeltaInsertOp.prototype.isCodeBlock = function () {\n    return !!this.attributes['code-block'];\n  };\n\n  DeltaInsertOp.prototype.hasSameLangAs = function (op) {\n    return this.attributes['code-block'] === op.attributes['code-block'];\n  };\n\n  DeltaInsertOp.prototype.isJustNewline = function () {\n    return this.insert.value === value_types_1.NewLine;\n  };\n\n  DeltaInsertOp.prototype.isList = function () {\n    return this.isOrderedList() || this.isBulletList() || this.isCheckedList() || this.isUncheckedList();\n  };\n\n  DeltaInsertOp.prototype.isOrderedList = function () {\n    return this.attributes.list === value_types_1.ListType.Ordered;\n  };\n\n  DeltaInsertOp.prototype.isBulletList = function () {\n    return this.attributes.list === value_types_1.ListType.Bullet;\n  };\n\n  DeltaInsertOp.prototype.isCheckedList = function () {\n    return this.attributes.list === value_types_1.ListType.Checked;\n  };\n\n  DeltaInsertOp.prototype.isUncheckedList = function () {\n    return this.attributes.list === value_types_1.ListType.Unchecked;\n  };\n\n  DeltaInsertOp.prototype.isACheckList = function () {\n    return this.attributes.list == value_types_1.ListType.Unchecked || this.attributes.list === value_types_1.ListType.Checked;\n  };\n\n  DeltaInsertOp.prototype.isSameListAs = function (op) {\n    return !!op.attributes.list && (this.attributes.list === op.attributes.list || op.isACheckList() && this.isACheckList());\n  };\n\n  DeltaInsertOp.prototype.isSameTableRowAs = function (op) {\n    return !!op.isTable() && this.isTable() && this.attributes.table === op.attributes.table;\n  };\n\n  DeltaInsertOp.prototype.isText = function () {\n    return this.insert.type === value_types_1.DataType.Text;\n  };\n\n  DeltaInsertOp.prototype.isImage = function () {\n    return this.insert.type === value_types_1.DataType.Image;\n  };\n\n  DeltaInsertOp.prototype.isFormula = function () {\n    return this.insert.type === value_types_1.DataType.Formula;\n  };\n\n  DeltaInsertOp.prototype.isVideo = function () {\n    return this.insert.type === value_types_1.DataType.Video;\n  };\n\n  DeltaInsertOp.prototype.isLink = function () {\n    return this.isText() && !!this.attributes.link;\n  };\n\n  DeltaInsertOp.prototype.isCustom = function () {\n    return this.insert instanceof InsertData_1.InsertDataCustom;\n  };\n\n  DeltaInsertOp.prototype.isCustomBlock = function () {\n    return this.isCustom() && !!this.attributes.renderAsBlock;\n  };\n\n  DeltaInsertOp.prototype.isMentions = function () {\n    return this.isText() && !!this.attributes.mentions;\n  };\n\n  return DeltaInsertOp;\n}();\n\nexports.DeltaInsertOp = DeltaInsertOp;","map":{"version":3,"sources":["/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/node_modules/quill-delta-to-html/dist/commonjs/DeltaInsertOp.js"],"names":["Object","defineProperty","exports","value","value_types_1","require","InsertData_1","DeltaInsertOp","insertVal","attrs","InsertDataQuill","DataType","Text","insert","attributes","createNewLineOp","NewLine","prototype","isContainerBlock","blockquote","list","table","header","align","direction","indent","isBlockquote","isHeader","isTable","isSameHeaderAs","op","hasSameAdiAs","hasSameIndentationAs","hasHigherIndentThan","Number","isInline","isVideo","isCustomBlock","isCodeBlock","hasSameLangAs","isJustNewline","isList","isOrderedList","isBulletList","isCheckedList","isUncheckedList","ListType","Ordered","Bullet","Checked","Unchecked","isACheckList","isSameListAs","isSameTableRowAs","isText","type","isImage","Image","isFormula","Formula","Video","isLink","link","isCustom","InsertDataCustom","renderAsBlock","isMentions","mentions"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA1B;;AACA,IAAIE,aAAa,GAAI,YAAY;AAC7B,WAASA,aAAT,CAAuBC,SAAvB,EAAkCC,KAAlC,EAAyC;AACrC,QAAI,OAAOD,SAAP,KAAqB,QAAzB,EAAmC;AAC/BA,MAAAA,SAAS,GAAG,IAAIF,YAAY,CAACI,eAAjB,CAAiCN,aAAa,CAACO,QAAd,CAAuBC,IAAxD,EAA8DJ,SAAS,GAAG,EAA1E,CAAZ;AACH;;AACD,SAAKK,MAAL,GAAcL,SAAd;AACA,SAAKM,UAAL,GAAkBL,KAAK,IAAI,EAA3B;AACH;;AACDF,EAAAA,aAAa,CAACQ,eAAd,GAAgC,YAAY;AACxC,WAAO,IAAIR,aAAJ,CAAkBH,aAAa,CAACY,OAAhC,CAAP;AACH,GAFD;;AAGAT,EAAAA,aAAa,CAACU,SAAd,CAAwBC,gBAAxB,GAA2C,YAAY;AACnD,QAAIT,KAAK,GAAG,KAAKK,UAAjB;AACA,WAAO,CAAC,EAAEL,KAAK,CAACU,UAAN,IACNV,KAAK,CAACW,IADA,IAENX,KAAK,CAACY,KAFA,IAGNZ,KAAK,CAAC,YAAD,CAHC,IAINA,KAAK,CAACa,MAJA,IAKNb,KAAK,CAACc,KALA,IAMNd,KAAK,CAACe,SANA,IAONf,KAAK,CAACgB,MAPF,CAAR;AAQH,GAVD;;AAWAlB,EAAAA,aAAa,CAACU,SAAd,CAAwBS,YAAxB,GAAuC,YAAY;AAC/C,WAAO,CAAC,CAAC,KAAKZ,UAAL,CAAgBK,UAAzB;AACH,GAFD;;AAGAZ,EAAAA,aAAa,CAACU,SAAd,CAAwBU,QAAxB,GAAmC,YAAY;AAC3C,WAAO,CAAC,CAAC,KAAKb,UAAL,CAAgBQ,MAAzB;AACH,GAFD;;AAGAf,EAAAA,aAAa,CAACU,SAAd,CAAwBW,OAAxB,GAAkC,YAAY;AAC1C,WAAO,CAAC,CAAC,KAAKd,UAAL,CAAgBO,KAAzB;AACH,GAFD;;AAGAd,EAAAA,aAAa,CAACU,SAAd,CAAwBY,cAAxB,GAAyC,UAAUC,EAAV,EAAc;AACnD,WAAOA,EAAE,CAAChB,UAAH,CAAcQ,MAAd,KAAyB,KAAKR,UAAL,CAAgBQ,MAAzC,IAAmD,KAAKK,QAAL,EAA1D;AACH,GAFD;;AAGApB,EAAAA,aAAa,CAACU,SAAd,CAAwBc,YAAxB,GAAuC,UAAUD,EAAV,EAAc;AACjD,WAAQ,KAAKhB,UAAL,CAAgBS,KAAhB,KAA0BO,EAAE,CAAChB,UAAH,CAAcS,KAAxC,IACJ,KAAKT,UAAL,CAAgBU,SAAhB,KAA8BM,EAAE,CAAChB,UAAH,CAAcU,SADxC,IAEJ,KAAKV,UAAL,CAAgBW,MAAhB,KAA2BK,EAAE,CAAChB,UAAH,CAAcW,MAF7C;AAGH,GAJD;;AAKAlB,EAAAA,aAAa,CAACU,SAAd,CAAwBe,oBAAxB,GAA+C,UAAUF,EAAV,EAAc;AACzD,WAAO,KAAKhB,UAAL,CAAgBW,MAAhB,KAA2BK,EAAE,CAAChB,UAAH,CAAcW,MAAhD;AACH,GAFD;;AAGAlB,EAAAA,aAAa,CAACU,SAAd,CAAwBgB,mBAAxB,GAA8C,UAAUH,EAAV,EAAc;AACxD,WAAQ,CAACI,MAAM,CAAC,KAAKpB,UAAL,CAAgBW,MAAjB,CAAN,IAAkC,CAAnC,KACHS,MAAM,CAACJ,EAAE,CAAChB,UAAH,CAAcW,MAAf,CAAN,IAAgC,CAD7B,CAAR;AAEH,GAHD;;AAIAlB,EAAAA,aAAa,CAACU,SAAd,CAAwBkB,QAAxB,GAAmC,YAAY;AAC3C,WAAO,EAAE,KAAKjB,gBAAL,MAA2B,KAAKkB,OAAL,EAA3B,IAA6C,KAAKC,aAAL,EAA/C,CAAP;AACH,GAFD;;AAGA9B,EAAAA,aAAa,CAACU,SAAd,CAAwBqB,WAAxB,GAAsC,YAAY;AAC9C,WAAO,CAAC,CAAC,KAAKxB,UAAL,CAAgB,YAAhB,CAAT;AACH,GAFD;;AAGAP,EAAAA,aAAa,CAACU,SAAd,CAAwBsB,aAAxB,GAAwC,UAAUT,EAAV,EAAc;AAClD,WAAO,KAAKhB,UAAL,CAAgB,YAAhB,MAAkCgB,EAAE,CAAChB,UAAH,CAAc,YAAd,CAAzC;AACH,GAFD;;AAGAP,EAAAA,aAAa,CAACU,SAAd,CAAwBuB,aAAxB,GAAwC,YAAY;AAChD,WAAO,KAAK3B,MAAL,CAAYV,KAAZ,KAAsBC,aAAa,CAACY,OAA3C;AACH,GAFD;;AAGAT,EAAAA,aAAa,CAACU,SAAd,CAAwBwB,MAAxB,GAAiC,YAAY;AACzC,WAAQ,KAAKC,aAAL,MACJ,KAAKC,YAAL,EADI,IAEJ,KAAKC,aAAL,EAFI,IAGJ,KAAKC,eAAL,EAHJ;AAIH,GALD;;AAMAtC,EAAAA,aAAa,CAACU,SAAd,CAAwByB,aAAxB,GAAwC,YAAY;AAChD,WAAO,KAAK5B,UAAL,CAAgBM,IAAhB,KAAyBhB,aAAa,CAAC0C,QAAd,CAAuBC,OAAvD;AACH,GAFD;;AAGAxC,EAAAA,aAAa,CAACU,SAAd,CAAwB0B,YAAxB,GAAuC,YAAY;AAC/C,WAAO,KAAK7B,UAAL,CAAgBM,IAAhB,KAAyBhB,aAAa,CAAC0C,QAAd,CAAuBE,MAAvD;AACH,GAFD;;AAGAzC,EAAAA,aAAa,CAACU,SAAd,CAAwB2B,aAAxB,GAAwC,YAAY;AAChD,WAAO,KAAK9B,UAAL,CAAgBM,IAAhB,KAAyBhB,aAAa,CAAC0C,QAAd,CAAuBG,OAAvD;AACH,GAFD;;AAGA1C,EAAAA,aAAa,CAACU,SAAd,CAAwB4B,eAAxB,GAA0C,YAAY;AAClD,WAAO,KAAK/B,UAAL,CAAgBM,IAAhB,KAAyBhB,aAAa,CAAC0C,QAAd,CAAuBI,SAAvD;AACH,GAFD;;AAGA3C,EAAAA,aAAa,CAACU,SAAd,CAAwBkC,YAAxB,GAAuC,YAAY;AAC/C,WAAQ,KAAKrC,UAAL,CAAgBM,IAAhB,IAAwBhB,aAAa,CAAC0C,QAAd,CAAuBI,SAA/C,IACJ,KAAKpC,UAAL,CAAgBM,IAAhB,KAAyBhB,aAAa,CAAC0C,QAAd,CAAuBG,OADpD;AAEH,GAHD;;AAIA1C,EAAAA,aAAa,CAACU,SAAd,CAAwBmC,YAAxB,GAAuC,UAAUtB,EAAV,EAAc;AACjD,WAAQ,CAAC,CAACA,EAAE,CAAChB,UAAH,CAAcM,IAAhB,KACH,KAAKN,UAAL,CAAgBM,IAAhB,KAAyBU,EAAE,CAAChB,UAAH,CAAcM,IAAvC,IACIU,EAAE,CAACqB,YAAH,MAAqB,KAAKA,YAAL,EAFtB,CAAR;AAGH,GAJD;;AAKA5C,EAAAA,aAAa,CAACU,SAAd,CAAwBoC,gBAAxB,GAA2C,UAAUvB,EAAV,EAAc;AACrD,WAAQ,CAAC,CAACA,EAAE,CAACF,OAAH,EAAF,IACJ,KAAKA,OAAL,EADI,IAEJ,KAAKd,UAAL,CAAgBO,KAAhB,KAA0BS,EAAE,CAAChB,UAAH,CAAcO,KAF5C;AAGH,GAJD;;AAKAd,EAAAA,aAAa,CAACU,SAAd,CAAwBqC,MAAxB,GAAiC,YAAY;AACzC,WAAO,KAAKzC,MAAL,CAAY0C,IAAZ,KAAqBnD,aAAa,CAACO,QAAd,CAAuBC,IAAnD;AACH,GAFD;;AAGAL,EAAAA,aAAa,CAACU,SAAd,CAAwBuC,OAAxB,GAAkC,YAAY;AAC1C,WAAO,KAAK3C,MAAL,CAAY0C,IAAZ,KAAqBnD,aAAa,CAACO,QAAd,CAAuB8C,KAAnD;AACH,GAFD;;AAGAlD,EAAAA,aAAa,CAACU,SAAd,CAAwByC,SAAxB,GAAoC,YAAY;AAC5C,WAAO,KAAK7C,MAAL,CAAY0C,IAAZ,KAAqBnD,aAAa,CAACO,QAAd,CAAuBgD,OAAnD;AACH,GAFD;;AAGApD,EAAAA,aAAa,CAACU,SAAd,CAAwBmB,OAAxB,GAAkC,YAAY;AAC1C,WAAO,KAAKvB,MAAL,CAAY0C,IAAZ,KAAqBnD,aAAa,CAACO,QAAd,CAAuBiD,KAAnD;AACH,GAFD;;AAGArD,EAAAA,aAAa,CAACU,SAAd,CAAwB4C,MAAxB,GAAiC,YAAY;AACzC,WAAO,KAAKP,MAAL,MAAiB,CAAC,CAAC,KAAKxC,UAAL,CAAgBgD,IAA1C;AACH,GAFD;;AAGAvD,EAAAA,aAAa,CAACU,SAAd,CAAwB8C,QAAxB,GAAmC,YAAY;AAC3C,WAAO,KAAKlD,MAAL,YAAuBP,YAAY,CAAC0D,gBAA3C;AACH,GAFD;;AAGAzD,EAAAA,aAAa,CAACU,SAAd,CAAwBoB,aAAxB,GAAwC,YAAY;AAChD,WAAO,KAAK0B,QAAL,MAAmB,CAAC,CAAC,KAAKjD,UAAL,CAAgBmD,aAA5C;AACH,GAFD;;AAGA1D,EAAAA,aAAa,CAACU,SAAd,CAAwBiD,UAAxB,GAAqC,YAAY;AAC7C,WAAO,KAAKZ,MAAL,MAAiB,CAAC,CAAC,KAAKxC,UAAL,CAAgBqD,QAA1C;AACH,GAFD;;AAGA,SAAO5D,aAAP;AACH,CAnHoB,EAArB;;AAoHAL,OAAO,CAACK,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar value_types_1 = require(\"./value-types\");\nvar InsertData_1 = require(\"./InsertData\");\nvar DeltaInsertOp = (function () {\n    function DeltaInsertOp(insertVal, attrs) {\n        if (typeof insertVal === 'string') {\n            insertVal = new InsertData_1.InsertDataQuill(value_types_1.DataType.Text, insertVal + '');\n        }\n        this.insert = insertVal;\n        this.attributes = attrs || {};\n    }\n    DeltaInsertOp.createNewLineOp = function () {\n        return new DeltaInsertOp(value_types_1.NewLine);\n    };\n    DeltaInsertOp.prototype.isContainerBlock = function () {\n        var attrs = this.attributes;\n        return !!(attrs.blockquote ||\n            attrs.list ||\n            attrs.table ||\n            attrs['code-block'] ||\n            attrs.header ||\n            attrs.align ||\n            attrs.direction ||\n            attrs.indent);\n    };\n    DeltaInsertOp.prototype.isBlockquote = function () {\n        return !!this.attributes.blockquote;\n    };\n    DeltaInsertOp.prototype.isHeader = function () {\n        return !!this.attributes.header;\n    };\n    DeltaInsertOp.prototype.isTable = function () {\n        return !!this.attributes.table;\n    };\n    DeltaInsertOp.prototype.isSameHeaderAs = function (op) {\n        return op.attributes.header === this.attributes.header && this.isHeader();\n    };\n    DeltaInsertOp.prototype.hasSameAdiAs = function (op) {\n        return (this.attributes.align === op.attributes.align &&\n            this.attributes.direction === op.attributes.direction &&\n            this.attributes.indent === op.attributes.indent);\n    };\n    DeltaInsertOp.prototype.hasSameIndentationAs = function (op) {\n        return this.attributes.indent === op.attributes.indent;\n    };\n    DeltaInsertOp.prototype.hasHigherIndentThan = function (op) {\n        return ((Number(this.attributes.indent) || 0) >\n            (Number(op.attributes.indent) || 0));\n    };\n    DeltaInsertOp.prototype.isInline = function () {\n        return !(this.isContainerBlock() || this.isVideo() || this.isCustomBlock());\n    };\n    DeltaInsertOp.prototype.isCodeBlock = function () {\n        return !!this.attributes['code-block'];\n    };\n    DeltaInsertOp.prototype.hasSameLangAs = function (op) {\n        return this.attributes['code-block'] === op.attributes['code-block'];\n    };\n    DeltaInsertOp.prototype.isJustNewline = function () {\n        return this.insert.value === value_types_1.NewLine;\n    };\n    DeltaInsertOp.prototype.isList = function () {\n        return (this.isOrderedList() ||\n            this.isBulletList() ||\n            this.isCheckedList() ||\n            this.isUncheckedList());\n    };\n    DeltaInsertOp.prototype.isOrderedList = function () {\n        return this.attributes.list === value_types_1.ListType.Ordered;\n    };\n    DeltaInsertOp.prototype.isBulletList = function () {\n        return this.attributes.list === value_types_1.ListType.Bullet;\n    };\n    DeltaInsertOp.prototype.isCheckedList = function () {\n        return this.attributes.list === value_types_1.ListType.Checked;\n    };\n    DeltaInsertOp.prototype.isUncheckedList = function () {\n        return this.attributes.list === value_types_1.ListType.Unchecked;\n    };\n    DeltaInsertOp.prototype.isACheckList = function () {\n        return (this.attributes.list == value_types_1.ListType.Unchecked ||\n            this.attributes.list === value_types_1.ListType.Checked);\n    };\n    DeltaInsertOp.prototype.isSameListAs = function (op) {\n        return (!!op.attributes.list &&\n            (this.attributes.list === op.attributes.list ||\n                (op.isACheckList() && this.isACheckList())));\n    };\n    DeltaInsertOp.prototype.isSameTableRowAs = function (op) {\n        return (!!op.isTable() &&\n            this.isTable() &&\n            this.attributes.table === op.attributes.table);\n    };\n    DeltaInsertOp.prototype.isText = function () {\n        return this.insert.type === value_types_1.DataType.Text;\n    };\n    DeltaInsertOp.prototype.isImage = function () {\n        return this.insert.type === value_types_1.DataType.Image;\n    };\n    DeltaInsertOp.prototype.isFormula = function () {\n        return this.insert.type === value_types_1.DataType.Formula;\n    };\n    DeltaInsertOp.prototype.isVideo = function () {\n        return this.insert.type === value_types_1.DataType.Video;\n    };\n    DeltaInsertOp.prototype.isLink = function () {\n        return this.isText() && !!this.attributes.link;\n    };\n    DeltaInsertOp.prototype.isCustom = function () {\n        return this.insert instanceof InsertData_1.InsertDataCustom;\n    };\n    DeltaInsertOp.prototype.isCustomBlock = function () {\n        return this.isCustom() && !!this.attributes.renderAsBlock;\n    };\n    DeltaInsertOp.prototype.isMentions = function () {\n        return this.isText() && !!this.attributes.mentions;\n    };\n    return DeltaInsertOp;\n}());\nexports.DeltaInsertOp = DeltaInsertOp;\n"]},"metadata":{},"sourceType":"script"}
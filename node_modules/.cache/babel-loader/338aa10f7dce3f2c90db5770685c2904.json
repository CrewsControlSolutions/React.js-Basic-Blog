{"ast":null,"code":"var _jsxFileName = \"/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/src/App.js\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { useStorageState } from \"react-storage-hooks\";\nimport UserContext from \"./context/UserContext\";\nimport Header from \"./components/Header\";\nimport Message from \"./components/Message\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\nimport PostForm from \"./components/PostForm\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport firebase from \"./firebase\";\nimport \"./App.css\";\n\nconst App = props => {\n  const [posts, setPosts] = useStorageState(localStorage, `state-posts`, []);\n  const [message, setMessage] = useState(null);\n  const [user, setUser] = useStorageState(localStorage, \"state-user\", {});\n\n  const setFlashMessage = message => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 1600);\n  };\n\n  const getNewSlugFromTitle = title => encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));\n\n  const addNewPost = post => {\n    const postsRef = firebase.database().ref(\"posts\");\n    post.slug = getNewSlugFromTitle(post.title);\n    delete post.key;\n    postsRef.push(post);\n    setFlashMessage(`saved`);\n  };\n\n  const Push = () => {\n    databa;\n  };\n\n  const updatePost = post => {\n    post.slug = getNewSlugFromTitle(post.title);\n    const index = posts.findIndex(p => p.id === post.id);\n    const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n    const updatedPosts = [...oldPosts, post].sort((a, b) => a.id - b.id);\n    setPosts(updatedPosts);\n    setFlashMessage(`updated`);\n  };\n\n  const deletePost = post => {\n    if (window.confirm(\"Delete this post?\")) {\n      const updatedPosts = posts.filter(p => p.id !== post.id);\n      setPosts(updatedPosts);\n      setFlashMessage(`deleted`);\n    }\n  }; // This is the possible function that I am having trouble with. Specifically, I receive an error in the\n  // console when entering a correct username and password. (See my email for a valid username and password\n  // to try.) The other possible area that is causing this error could be something in the firebase.js\n  // file.\n\n\n  const onLogin = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password) // .then(user => console.log(\"Logged in\"))\n    .then(response => {\n      setUser({\n        email: response.user[\"email\"],\n        isAuthenticated: true\n      });\n    }).catch(error => console.error(error));\n  };\n\n  const onLogout = () => {\n    firebase.auth().signOut().then(() => {\n      setUser({\n        isAuthenticated: false\n      });\n    }).catch(error => console.error(error));\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user,\n      onLogin,\n      onLogout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), message && /*#__PURE__*/React.createElement(Message, {\n    type: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Posts, {\n      posts: posts,\n      deletePost: deletePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 61\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/post/:postSlug\",\n    render: props => {\n      const post = posts.find(post => post.slug === props.match.params.postSlug);\n\n      if (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          post: post,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 44\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 44\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => !user.isAuthenticated ? /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 57\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 69\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    render: () => user.isAuthenticated ? /*#__PURE__*/React.createElement(PostForm, {\n      addNewPost: addNewPost,\n      post: {\n        key: null,\n        slug: \"\",\n        title: \"\",\n        content: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/edit/:postSlug\",\n    render: props => {\n      const post = posts.find(post => post.slug === props.match.params.postSlug);\n\n      if (post) {\n        if (user.isAuthenticated) {\n          return /*#__PURE__*/React.createElement(PostForm, {\n            updatePost: updatePost,\n            post: post,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 48\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/login\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 48\n            }\n          });\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 44\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: NotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default App; // previous Realtime Database rules (auto-configured)\n// {\n//     \"rules\": {\n//     \".read\": \"now < 1648447200000\",  // 2022-3-28\n//         \".write\": \"now < 1648447200000\",  // 2022-3-28\n// }\n// }","map":{"version":3,"sources":["/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Redirect","useStorageState","UserContext","Header","Message","Posts","Post","PostForm","NotFound","Login","firebase","App","props","posts","setPosts","localStorage","message","setMessage","user","setUser","setFlashMessage","setTimeout","getNewSlugFromTitle","title","encodeURIComponent","toLowerCase","split","join","addNewPost","post","postsRef","database","ref","slug","key","push","Push","databa","updatePost","index","findIndex","p","id","oldPosts","slice","concat","updatedPosts","sort","a","b","deletePost","window","confirm","filter","onLogin","email","password","auth","signInWithEmailAndPassword","then","response","isAuthenticated","catch","error","console","onLogout","signOut","find","match","params","postSlug","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useStorageState } from \"react-storage-hooks\";\nimport UserContext from \"./context/UserContext\";\nimport Header from \"./components/Header\";\nimport Message from \"./components/Message\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\nimport PostForm from \"./components/PostForm\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport firebase from \"./firebase\";\n\nimport \"./App.css\";\n\nconst App = (props) => {\n  const [posts, setPosts] = useStorageState(localStorage, `state-posts`, []);\n  const [message, setMessage] = useState(null);\n  const [user, setUser] = useStorageState(localStorage, \"state-user\", {});\n\n  const setFlashMessage = (message) => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 1600);\n  };\n\n  const getNewSlugFromTitle = (title) =>\n    encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));\n\n  const addNewPost = (post) => {\n    const postsRef = firebase.database().ref(\"posts\");\n    post.slug = getNewSlugFromTitle(post.title);\n    delete post.key;\n    postsRef.push(post);\n    setFlashMessage(`saved`);\n  };\n\n  const Push = () => {\n      databa\n  }\n\n  const updatePost = (post) => {\n    post.slug = getNewSlugFromTitle(post.title);\n    const index = posts.findIndex((p) => p.id === post.id);\n    const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n    const updatedPosts = [...oldPosts, post].sort((a, b) => a.id - b.id);\n    setPosts(updatedPosts);\n    setFlashMessage(`updated`);\n  };\n\n  const deletePost = (post) => {\n      if (window.confirm(\"Delete this post?\")) {\n          const updatedPosts = posts.filter((p) => p.id !== post.id);\n          setPosts(updatedPosts);\n          setFlashMessage(`deleted`);\n      }\n  };\n\n  // This is the possible function that I am having trouble with. Specifically, I receive an error in the\n  // console when entering a correct username and password. (See my email for a valid username and password\n  // to try.) The other possible area that is causing this error could be something in the firebase.js\n  // file.\n  const onLogin = (email, password) => {\n      firebase\n          .auth()\n          .signInWithEmailAndPassword(email, password)\n          // .then(user => console.log(\"Logged in\"))\n          .then((response) => {\n              setUser({\n                  email: response.user[\"email\"],\n                  isAuthenticated: true,\n              });\n          })\n          .catch(error => console.error(error));\n  };\n\n  const onLogout = () => {\n      firebase\n          .auth()\n          .signOut()\n          .then(() => {\n              setUser({ isAuthenticated: false });\n          })\n          .catch((error) => console.error(error));\n  };\n\n    return (\n        <Router>\n            <UserContext.Provider value={{ user, onLogin, onLogout }}>\n                <div className=\"App\">\n                    <Header />\n                    {message && <Message type={message} />}\n                    <Switch>\n                        <Route exact path=\"/\" render={() => <Posts posts={posts} deletePost={deletePost} />} />\n                        <Route\n                            path=\"/post/:postSlug\"\n                            render={(props) => {\n                                const post = posts.find(\n                                    (post) => post.slug === props.match.params.postSlug\n                                );\n                                if (post) {\n                                    return <Post post={post} />;\n                                } else {\n                                    return <Redirect to=\"/\" />;\n                                }\n                            }}\n                        />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={() =>\n                                !user.isAuthenticated ? <Login /> : <Redirect to=\"/\" />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={() => (\n                                user.isAuthenticated ? (\n                                    <PostForm\n                                        addNewPost={addNewPost}\n                                        post={{ key: null, slug: \"\", title: \"\", content: \"\" }}\n                                    />\n                                ) : (\n                                    <Redirect to=\"/login\" />\n                                )\n                            )}\n                        />\n                        <Route\n                            path=\"/edit/:postSlug\"\n                            render={(props) => {\n                                const post = posts.find(\n                                    (post) => post.slug === props.match.params.postSlug\n                                );\n                                if (post) {\n                                    if (user.isAuthenticated) {\n                                        return <PostForm updatePost={updatePost} post={post} />;\n                                    } else {\n                                        return <Redirect to=\"/login\" />;\n                                    }\n                                } else {\n                                    return <Redirect to=\"/\" />;\n                                }\n                            }}\n                        />\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </UserContext.Provider>\n        </Router>\n    );\n};\n\nexport default App;\n\n// previous Realtime Database rules (auto-configured)\n// {\n//     \"rules\": {\n//     \".read\": \"now < 1648447200000\",  // 2022-3-28\n//         \".write\": \"now < 1648447200000\",  // 2022-3-28\n// }\n// }"]},"metadata":{},"sourceType":"module"}
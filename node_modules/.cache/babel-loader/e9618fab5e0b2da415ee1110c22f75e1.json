{"ast":null,"code":"var _jsxFileName = \"/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/src/App.js\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Message from \"./components/Message\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\nimport PostForm from \"./components/PostForm\";\nimport NotFound from \"./components/NotFound\";\nimport \"./App.css\";\n\nconst App = props => {\n  const [posts, setPosts] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  const setFlashMessage = message => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 1600);\n  };\n\n  const getNewSlugFromTitle = title => encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));\n\n  const addNewPost = post => {\n    post.id = posts.length + 1;\n    post.slug = getNewSlugFromTitle(post.title);\n    setPosts([...posts, post]);\n    setFlashMessage(`saved`);\n  };\n\n  const updatePost = post => {\n    post.slug = getNewSlugFromTitle(post.title);\n    const index = posts.findIndex(p => p.id === post.id);\n    const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n    const updatedPosts = [...oldPosts, post].sort((a, b) => a.id - b.id);\n    setPosts(updatedPosts);\n    setFlashMessage(`updated`);\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), message && /*#__PURE__*/React.createElement(Message, {\n    type: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(Posts, {\n      posts: posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 47\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/post/:postSlug\",\n    render: props => {\n      const post = posts.find(post => post.slug === props.match.params.postSlug);\n\n      if (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          post: post,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 24\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/new\",\n    render: () => /*#__PURE__*/React.createElement(PostForm, {\n      addNewPost: addNewPost,\n      post: {\n        id: 0,\n        slug: \"\",\n        title: \"\",\n        content: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/edit/:postSlug\",\n    render: props => {\n      const post = posts.find(post => post.slug === props.match.params.postSlug);\n\n      if (post) {\n        return /*#__PURE__*/React.createElement(PostForm, {\n          updatePost: updatePost,\n          post: post,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 24\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: NotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Redirect","Header","Message","Posts","Post","PostForm","NotFound","App","props","posts","setPosts","message","setMessage","setFlashMessage","setTimeout","getNewSlugFromTitle","title","encodeURIComponent","toLowerCase","split","join","addNewPost","post","id","length","slug","updatePost","index","findIndex","p","oldPosts","slice","concat","updatedPosts","sort","a","b","find","match","params","postSlug","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Message from \"./components/Message\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\nimport PostForm from \"./components/PostForm\";\nimport NotFound from \"./components/NotFound\";\n\nimport \"./App.css\";\n\nconst App = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  const setFlashMessage = (message) => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 1600);\n  };\n\n  const getNewSlugFromTitle = (title) =>\n    encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));\n\n  const addNewPost = (post) => {\n    post.id = posts.length + 1;\n    post.slug = getNewSlugFromTitle(post.title);\n    setPosts([...posts, post]);\n    setFlashMessage(`saved`);\n  };\n\n  const updatePost = (post) => {\n    post.slug = getNewSlugFromTitle(post.title);\n    const index = posts.findIndex((p) => p.id === post.id);\n    const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n    const updatedPosts = [...oldPosts, post].sort((a, b) => a.id - b.id);\n    setPosts(updatedPosts);\n    setFlashMessage(`updated`);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        {message && <Message type={message} />}\n        <Switch>\n          <Route exact path=\"/\" render={() => <Posts posts={posts} />} />\n          <Route\n            path=\"/post/:postSlug\"\n            render={(props) => {\n              const post = posts.find(\n                (post) => post.slug === props.match.params.postSlug\n              );\n              if (post) {\n                return <Post post={post} />;\n              } else {\n                return <Redirect to=\"/\" />;\n              }\n            }}\n          />\n          <Route\n            exact\n            path=\"/new\"\n            render={() => (\n              <PostForm\n                addNewPost={addNewPost}\n                post={{ id: 0, slug: \"\", title: \"\", content: \"\" }}\n              />\n            )}\n          />\n          <Route\n            path=\"/edit/:postSlug\"\n            render={(props) => {\n              const post = posts.find(\n                (post) => post.slug === props.match.params.postSlug\n              );\n              if (post) {\n                return <PostForm updatePost={updatePost} post={post} />;\n              } else {\n                return <Redirect to=\"/\" />;\n              }\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{BrowserRouter as Router,Switch,Route,Redirect}from\"react-router-dom\";import{useStorageState}from\"react-storage-hooks\";import UserContext from\"./context/UserContext\";import Header from\"./components/Header\";import Message from\"./components/Message\";import Posts from\"./components/Posts\";import Post from\"./components/Post\";import PostForm from\"./components/PostForm\";import NotFound from\"./components/NotFound\";import Login from\"./components/Login\";import firebase from\"./firebase\";import\"./App.css\";var App=function App(props){var _useStorageState=useStorageState(localStorage,\"state-posts\",[]),_useStorageState2=_slicedToArray(_useStorageState,2),posts=_useStorageState2[0],setPosts=_useStorageState2[1];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useStorageState3=useStorageState(localStorage,\"state-user\",{}),_useStorageState4=_slicedToArray(_useStorageState3,2),user=_useStorageState4[0],setUser=_useStorageState4[1];useEffect(function(){var postsRef=firebase.database().ref(\"posts\");postsRef.on(\"value\",function(snapshot){var posts=snapshot.val();var newStatePosts=[];for(var post in posts){newStatePosts.push({key:post,slug:posts[post].slug,title:posts[post].title,content:posts[post].content});}setPosts(newStatePosts);});},[setPosts]);var setFlashMessage=function setFlashMessage(message){setMessage(message);setTimeout(function(){setMessage(null);},1600);};var getNewSlugFromTitle=function getNewSlugFromTitle(title){return encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));};var addNewPost=function addNewPost(post){var postsRef=firebase.database().ref(\"posts\");post.slug=getNewSlugFromTitle(post.title);delete post.key;postsRef.push(post);setFlashMessage(\"saved\");};// const Push = (props) => {\n//     firebase.database().ref(\"react-blog-demo-1-default-rtdb\").set({\n//         title : \"This is a test.\",\n//         contents : \"This is the content of the test.\",\n//     }).catch(alert);\n// }\nvar updatePost=function updatePost(post){var postRef=firebase.database().ref(\"posts/\"+post.key);postRef.update({slug:getNewSlugFromTitle(post.title),title:post.title,content:post.content});// post.slug = getNewSlugFromTitle(post.title);\n// const index = posts.findIndex((p) => p.key === post.key);\n// const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n// const updatedPosts = [...oldPosts, post].sort((a, b) => a.key - b.key);\n// setPosts(updatedPosts);\nsetFlashMessage(\"updated\");};var deletePost=function deletePost(post){if(window.confirm(\"Delete this post?\")){var postRef=firebase.database().ref(\"posts/\"+post.key);postRef.remove();// const updatedPosts = posts.filter((p) => p.key !== post.key);\n// setPosts(updatedPosts);\nsetFlashMessage(\"deleted\");}};// This is the possible function that I am having trouble with. Specifically, I receive an error in the\n// console when entering a correct username and password. (See my email for a valid username and password\n// to try.) The other possible area that is causing this error could be something in the firebase.js\n// file.\nvar onLogin=function onLogin(email,password){firebase.auth().signInWithEmailAndPassword(email,password)// .then(user => console.log(\"Logged in\"))\n.then(function(response){setUser({email:response.user[\"email\"],isAuthenticated:true});}).catch(function(error){return console.error(error);});};var onLogout=function onLogout(){firebase.auth().signOut().then(function(){setUser({isAuthenticated:false});}).catch(function(error){return console.error(error);});};return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(UserContext.Provider,{value:{user:user,onLogin:onLogin,onLogout:onLogout}},/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Header,null),message&&/*#__PURE__*/React.createElement(Message,{type:message}),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",render:function render(){return/*#__PURE__*/React.createElement(Posts,{posts:posts,deletePost:deletePost});}}),/*#__PURE__*/React.createElement(Route,{path:\"/post/:postSlug\",render:function render(props){var post=posts.find(function(post){return post.slug===props.match.params.postSlug;});if(post){return/*#__PURE__*/React.createElement(Post,{post:post});}else{return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/login\",render:function render(){return!user.isAuthenticated?/*#__PURE__*/React.createElement(Login,null):/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/new\",render:function render(){return user.isAuthenticated?/*#__PURE__*/React.createElement(PostForm,{addNewPost:addNewPost,post:{key:null,slug:\"\",title:\"\",content:\"\"}}):/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}}),/*#__PURE__*/React.createElement(Route,{path:\"/edit/:postSlug\",render:function render(props){var post=posts.find(function(post){return post.slug===props.match.params.postSlug;});if(post){if(user.isAuthenticated){return/*#__PURE__*/React.createElement(PostForm,{updatePost:updatePost,post:post});}else{return/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}}else{return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}}}),/*#__PURE__*/React.createElement(Route,{component:NotFound})))));};export default App;// previous Realtime Database rules (auto-configured)\n// {\n//     \"rules\": {\n//     \".read\": \"now < 1648447200000\",  // 2022-3-28\n//         \".write\": \"now < 1648447200000\",  // 2022-3-28\n// }\n// }","map":{"version":3,"sources":["/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Redirect","useStorageState","UserContext","Header","Message","Posts","Post","PostForm","NotFound","Login","firebase","App","props","localStorage","posts","setPosts","message","setMessage","user","setUser","postsRef","database","ref","on","snapshot","val","newStatePosts","post","push","key","slug","title","content","setFlashMessage","setTimeout","getNewSlugFromTitle","encodeURIComponent","toLowerCase","split","join","addNewPost","updatePost","postRef","update","deletePost","window","confirm","remove","onLogin","email","password","auth","signInWithEmailAndPassword","then","response","isAuthenticated","catch","error","console","onLogout","signOut","find","match","params","postSlug"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useStorageState } from \"react-storage-hooks\";\nimport UserContext from \"./context/UserContext\";\nimport Header from \"./components/Header\";\nimport Message from \"./components/Message\";\nimport Posts from \"./components/Posts\";\nimport Post from \"./components/Post\";\nimport PostForm from \"./components/PostForm\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport firebase from \"./firebase\";\n\nimport \"./App.css\";\n\nconst App = (props) => {\n  const [posts, setPosts] = useStorageState(localStorage, `state-posts`, []);\n  const [message, setMessage] = useState(null);\n  const [user, setUser] = useStorageState(localStorage, \"state-user\", {});\n\n  useEffect(() => {\n      const postsRef = firebase.database().ref(\"posts\");\n      postsRef.on(\"value\", (snapshot) => {\n          const posts = snapshot.val();\n          const newStatePosts = [];\n          for (let post in posts) {\n              newStatePosts.push({\n                  key: post,\n                  slug: posts[post].slug,\n                  title: posts[post].title,\n                  content: posts[post].content,\n              });\n          }\n          setPosts(newStatePosts);\n      });\n  }, [setPosts]);\n\n  const setFlashMessage = (message) => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 1600);\n  };\n\n  const getNewSlugFromTitle = (title) =>\n    encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));\n\n  const addNewPost = (post) => {\n    const postsRef = firebase.database().ref(\"posts\");\n    post.slug = getNewSlugFromTitle(post.title);\n    delete post.key;\n    postsRef.push(post);\n    setFlashMessage(`saved`);\n  };\n\n  // const Push = (props) => {\n  //     firebase.database().ref(\"react-blog-demo-1-default-rtdb\").set({\n  //         title : \"This is a test.\",\n  //         contents : \"This is the content of the test.\",\n  //     }).catch(alert);\n  // }\n\n  const updatePost = (post) => {\n        const postRef = firebase.database().ref(\"posts/\" + post.key);\n        postRef.update({\n          slug: getNewSlugFromTitle(post.title),\n          title: post.title,\n          content: post.content,\n        });\n\n        // post.slug = getNewSlugFromTitle(post.title);\n        // const index = posts.findIndex((p) => p.key === post.key);\n        // const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n        // const updatedPosts = [...oldPosts, post].sort((a, b) => a.key - b.key);\n        // setPosts(updatedPosts);\n        setFlashMessage(`updated`);\n  };\n\n  const deletePost = (post) => {\n      if (window.confirm(\"Delete this post?\")) {\n          const postRef = firebase.database().ref(\"posts/\" + post.key);\n          postRef.remove();\n          // const updatedPosts = posts.filter((p) => p.key !== post.key);\n          // setPosts(updatedPosts);\n          setFlashMessage(`deleted`);\n      }\n  };\n\n  // This is the possible function that I am having trouble with. Specifically, I receive an error in the\n  // console when entering a correct username and password. (See my email for a valid username and password\n  // to try.) The other possible area that is causing this error could be something in the firebase.js\n  // file.\n  const onLogin = (email, password) => {\n      firebase\n          .auth()\n          .signInWithEmailAndPassword(email, password)\n          // .then(user => console.log(\"Logged in\"))\n          .then((response) => {\n              setUser({\n                  email: response.user[\"email\"],\n                  isAuthenticated: true,\n              });\n          })\n          .catch(error => console.error(error));\n  };\n\n  const onLogout = () => {\n      firebase\n          .auth()\n          .signOut()\n          .then(() => {\n              setUser({ isAuthenticated: false });\n          })\n          .catch((error) => console.error(error));\n  };\n\n    return (\n        <Router>\n            <UserContext.Provider value={{ user, onLogin, onLogout }}>\n                <div className=\"App\">\n                    <Header />\n                    {message && <Message type={message} />}\n                    <Switch>\n                        <Route exact path=\"/\" render={() => <Posts posts={posts} deletePost={deletePost} />} />\n                        <Route\n                            path=\"/post/:postSlug\"\n                            render={(props) => {\n                                const post = posts.find(\n                                    (post) => post.slug === props.match.params.postSlug\n                                );\n                                if (post) {\n                                    return <Post post={post} />;\n                                } else {\n                                    return <Redirect to=\"/\" />;\n                                }\n                            }}\n                        />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={() =>\n                                !user.isAuthenticated ? <Login /> : <Redirect to=\"/\" />\n                            }\n                        />\n                        <Route\n                            exact\n                            path=\"/new\"\n                            render={() => (\n                                user.isAuthenticated ? (\n                                    <PostForm\n                                        addNewPost={addNewPost}\n                                        post={{ key: null, slug: \"\", title: \"\", content: \"\" }}\n                                    />\n                                ) : (\n                                    <Redirect to=\"/login\" />\n                                )\n                            )}\n                        />\n                        <Route\n                            path=\"/edit/:postSlug\"\n                            render={(props) => {\n                                const post = posts.find(\n                                    (post) => post.slug === props.match.params.postSlug\n                                );\n                                if (post) {\n                                    if (user.isAuthenticated) {\n                                        return <PostForm updatePost={updatePost} post={post} />;\n                                    } else {\n                                        return <Redirect to=\"/login\" />;\n                                    }\n                                } else {\n                                    return <Redirect to=\"/\" />;\n                                }\n                            }}\n                        />\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </UserContext.Provider>\n        </Router>\n    );\n};\n\nexport default App;\n\n// previous Realtime Database rules (auto-configured)\n// {\n//     \"rules\": {\n//     \".read\": \"now < 1648447200000\",  // 2022-3-28\n//         \".write\": \"now < 1648447200000\",  // 2022-3-28\n// }\n// }"]},"metadata":{},"sourceType":"module"}
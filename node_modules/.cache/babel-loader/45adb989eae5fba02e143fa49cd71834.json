{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\n\nvar MIN_SAFE_INTEGER = -9007199254740991;\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function () {\n      return this.name_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function () {\n      return this.code_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function () {\n      return this.message_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function () {\n      return this.serverResponse_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, authWrapper) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(authWrapper, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nfunction fromResourceString(authWrapper, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(authWrapper, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(authWrapper, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(authWrapper, bucket, resource);\n}\n\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(authWrapper, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(authWrapper, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(authWrapper, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(authWrapper, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, listHandler(authWrapper, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(authWrapper, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = authWrapper.maxOperationRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(authWrapper, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = authWrapper.maxUploadRetryTime();\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var chainedValidator;\n\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n\n  return new ArgSpec(chainedValidator, optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\n\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, optional);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this.authWrapper_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(authWrapper, location) {\n    this.authWrapper = authWrapper;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (authWrapper, location) {\n    return new Reference(authWrapper, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.authWrapper, location);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function () {\n      return this.location.bucket;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function () {\n      return this.location.path;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function () {\n      return lastComponent(this.location.path);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function () {\n      return this.authWrapper.service();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype.delete = function () {\n    var _this = this;\n\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.authWrapper, _this.location);\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n\n\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4\n            /*yield*/\n            , this.list(opt)];\n\n          case 1:\n            nextPage = _c.sent();\n\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n            if (!(nextPage.nextPageToken != null)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.listAllHelper(accumulator, nextPage.nextPageToken)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n\n\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.authWrapper, self.location,\n      /*delimiter= */\n      '/', op.pageToken, op.maxResults);\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.authWrapper.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\n      return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n\n        return url;\n      });\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n\nvar RequestMap =\n/** @class */\nfunction () {\n  function RequestMap() {\n    this.map = new Map();\n    this.id = MIN_SAFE_INTEGER;\n  }\n  /**\r\n   * Registers the given request with this map.\r\n   * The request is unregistered when it completes.\r\n   *\r\n   * @param request The request to register.\r\n   */\n\n\n  RequestMap.prototype.addRequest = function (request) {\n    var _this = this;\n\n    var id = this.id;\n    this.id++;\n    this.map.set(id, request);\n    request.getPromise().then(function () {\n      return _this.map.delete(id);\n    }, function () {\n      return _this.map.delete(id);\n    });\n  };\n  /**\r\n   * Cancels all registered requests.\r\n   */\n\n\n  RequestMap.prototype.clear = function () {\n    this.map.forEach(function (v) {\n      v && v.cancel(true);\n    });\n    this.map.clear();\n  };\n\n  return RequestMap;\n}();\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\n\n\nvar AuthWrapper =\n/** @class */\nfunction () {\n  function AuthWrapper(app, authProvider, maker, requestMaker, service, pool) {\n    var _a;\n\n    this.bucket_ = null;\n    this.appId_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n\n    if (this.app_ !== null) {\n      var options = this.app_.options;\n\n      if (isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n        this.appId_ = (_a = options.appId) !== null && _a !== void 0 ? _a : null;\n      }\n    }\n\n    this.authProvider_ = authProvider;\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requestMap_ = new RequestMap();\n  }\n\n  AuthWrapper.extractBucket_ = function (config) {\n    var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    var loc = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  };\n\n  AuthWrapper.prototype.getAuthToken = function () {\n    var auth = this.authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (auth) {\n      return auth.getToken().then(function (response) {\n        if (response !== null) {\n          return response.accessToken;\n        } else {\n          return null;\n        }\n      }, function () {\n        return null;\n      });\n    } else {\n      return Promise.resolve(null);\n    }\n  };\n\n  AuthWrapper.prototype.bucket = function () {\n    if (this.deleted_) {\n      throw appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  };\n  /**\r\n   * The service associated with this auth wrapper. Untyped to avoid circular\r\n   * type dependencies.\r\n   */\n\n\n  AuthWrapper.prototype.service = function () {\n    return this.service_;\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return Actually a firebaseStorage.Reference, typing not allowed\r\n   *     because of circular dependency problems.\r\n   */\n\n\n  AuthWrapper.prototype.makeStorageReference = function (loc) {\n    return this.storageRefMaker_(this, loc);\n  };\n\n  AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\n    if (!this.deleted_) {\n      var request = this.requestMaker_(requestInfo, this.appId_, authToken, this.pool_);\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  AuthWrapper.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  };\n\n  AuthWrapper.prototype.maxUploadRetryTime = function () {\n    return this.maxUploadRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\n    this.maxUploadRetryTime_ = time;\n  };\n\n  AuthWrapper.prototype.maxOperationRetryTime = function () {\n    return this.maxOperationRetryTime_;\n  };\n\n  AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\n    this.maxOperationRetryTime_ = time;\n  };\n\n  return AuthWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, callback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar Service =\n/** @class */\nfunction () {\n  function Service(app, authProvider, pool, url) {\n    this.bucket_ = null;\n\n    function maker(authWrapper, loc) {\n      return new Reference(authWrapper, loc);\n    }\n\n    this.authWrapper_ = new AuthWrapper(app, authProvider, maker, makeRequest, this, pool);\n    this.app_ = app;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      var authWrapperBucket = this.authWrapper_.bucket();\n\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  Service.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this.authWrapper_, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  Service.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  };\n\n  Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.authWrapper_.maxUploadRetryTime();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Service.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  };\n\n  Service.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  };\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Service.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Service;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.authWrapper_.deleteApp();\n    return Promise.resolve();\n  };\n\n  return ServiceInternals;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.32\";\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, url) {\n  // Dependencies\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  return new Service(app, authProvider, new XhrIoPool(), url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: Service,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"mappings":"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","names":["DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","MIN_SAFE_INTEGER","code","message","code_","prependCode","message_","serverResponse_","name_","FirebaseStorageError","codeProp","serverResponse","Object","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","index","fnName","invalidArgumentCount","argMin","argMax","real","countPart","plural","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","data","contentType","dataFromString","stringData","StringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","errorsExports.unknown","value","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","errorsExports.invalidFormat","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","base64","endsWith","substring","rest","dataUrl","parts","DataURLParts","s","end","longEnough","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isNonArrayObject","Array","isArray","isString","String","isInteger","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","ErrorCode","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","_this","addEventListener","ABORT","resolve","NETWORK_ERROR","NetworkXhrIo","method","body","headers","sent_","errorsExports.internalError","open","type.isDef","key","hasOwnProperty","setRequestHeader","toString","send","status","responseText","abort","header","getResponseHeader","listener","upload","removeEventListener","XhrIoPool","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","undefined","getBlob","args","bb","append","type.isNativeBlobDefined","Error","sliceBlob","blob","start","webkitSlice","mozSlice","slice","elideCopy","size","blobType","type.isNativeBlob","data_","type","ArrayBuffer","byteLength","set","size_","type_","FbsBlob","startByte","endByte","realBlob","sliced","fs.sliceBlob","buffer","blobby","map","val","fs.getBlob","apply","uint8Arrays","type.isString","finalLength_1","forEach","merged_1","index_1","path_","Location","encode","encodeURIComponent","bucketString","bucketLocation","makeFromUrl","errorsExports.invalidDefaultBucket","location","bucketDomain","gsModify","loc","charAt","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","errorsExports.invalidUrl","jsonObjectOrNull","obj","JSON","parse","type.isNonArrayObject","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","join","lastComponent","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","noXform_","metadata","server","local","writable","xform","mappings_","xformPath","fullPath","path.lastComponent","getMappings","mappings","Mapping","mappingsXformPath","_metadata","nameMapping","xformSize","sizeMapping","addRef","authWrapper","generateRef","makeStorageReference","defineProperty","get","fromResource","resource","len","mapping","fromResourceString","resourceString","json.jsonObjectOrNull","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","UrlUtils.makeUrl","queryString","UrlUtils.makeQueryString","alt","toResourceString","stringify","metadataValidator","type.isObject","type.isNonNullObject","MAX_RESULTS_KEY","MAX_MAX_RESULTS","PAGE_TOKEN_KEY","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_i","pathWithoutTrailingSlash","reference","_b","item","fromResponseString","listOptionsValidator","type.isInteger","handler","timeout","handlerCheck","cndn","metadataHandler","xhr","text","MetadataUtils.fromResourceString","listHandler","ListResultUtils.fromResponseString","downloadUrlHandler","MetadataUtils.downloadUrlFromResourceString","sharedErrorHandler","errorHandler","err","newErr","getStatus","setServerResponseProp","serverResponseProp","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestInfo","RequestInfo","list","delimiter","pageToken","maxResults","urlParams","isRoot","bucketOnlyServerUrl","getDownloadUrl","updateMetadata","MetadataUtils.toResourceString","deleteObject","_xhr","_text","successCodes","determineContentType_","metadataForUpload_","metadataClone","assign","multipartUpload","genBoundary","str","Math","random","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","uploadData","current","total","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","ResumableUploadStatus","resumableUploadChunkSize","continueResumableUpload","chunkSize","progressCallback","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","nextOrObserver","error","complete","asFunctions","type.isFunction","next","observer","bytesTransferred","totalBytes","task","ref","validate","specs","passed","minArgs","maxArgs","optional","validLength","errorsExports.invalidArgumentCount","validator","errorsExports.invalidArgument","self","type.isJustDef","and_","v1","v2","stringSpec","stringValidator","chainedValidator","ArgSpec","uploadDataSpec","metadataSpec","MetadataUtils.metadataValidator","listOptionSpec","ListOptionsUtils.listOptionsValidator","nonNegativeNumberSpec","type.isNumber","looseObjectSpec","isLooseObjectValidator","isLooseObject","nullFunctionSpec","async","f","argsToForward","then","ref_","authWrapper_","location_","blob_","resumable_","shouldDoResumable_","state_","errorHandler_","request_","chunkMultiplier_","codeEquals","needToFetchStatus_","completeTransitions_","error_","transition_","metadataErrorHandler_","promise_","reject","resolve_","reject_","start_","UploadTask","sizeBefore","transferred_","updateProgress_","loaded","uploadUrl_","createResumable_","fetchStatus_","needToFetchMetadata_","fetchMetadata_","continueUpload_","oneShotUpload_","callback","getAuthToken","authToken","resolveToken_","fbsRequests.createResumableUpload","createRequest","makeRequest","getPromise","fbsRequests.getResumableUploadStatus","statusRequest","fbsRequests.resumableUploadChunkSize","fbsRequests.ResumableUploadStatus","fbsRequests.continueResumableUpload","makeProgressCallback_","uploadRequest","newStatus","increaseMultiplier_","currentSize","fbsRequests.getMetadata","metadataRequest","fbsRequests.multipartUpload","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","UploadTaskSnapshot","completed","typeValidator","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","anyDefined","typeUtils.isJustDef","arguments","makeBinder","binder","Observer","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","observers_","notifyObserver_","splice","finishPromise_","observers","triggered","fbsAsync","bind","snapshot","toCall","Reference","metadata.getMappings","path.child","newRef","path.parent","service","throwIfRoot_","requests.deleteObject","accumulator","listAllHelper","opt","nextPage","_c","_a","options","op","requests.list","requests.getMetadata","requests.updateMetadata","requests.getDownloadUrl","errorsExports.noDownloadURL","errorsExports.invalidRootOperation","FailRequest","_appDelete","Map","id","constants.MIN_SAFE_INTEGER","RequestMap","request","delete","v","clear","app","authProvider","maker","requestMaker","pool","app_","bucket_","AuthWrapper","extractBucket_","appId_","appId","authProvider_","storageRefMaker_","requestMaker_","pool_","service_","maxOperationRetryTime_","constants.DEFAULT_MAX_OPERATION_RETRY_TIME","maxUploadRetryTime_","constants.DEFAULT_MAX_UPLOAD_RETRY_TIME","requestMap_","config","constants.CONFIG_STORAGE_BUCKET_KEY","makeFromBucketSpec","auth","getImmediate","getToken","response","accessToken","deleted_","errorsExports.appDeleted","addRequest","time","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","call","__spreadArrays","mustStop","waitMillis","stopped","stop","wasTimeout","clearTimeout","additionalRetryCodes","errorCallback","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","NetworkRequest","doTheRequest","backoffCallback","RequestEndStatus","createXhrIo","pendingXhr_","progressListener","progressEvent","lengthComputable","addUploadProgressListener","removeUploadProgressListener","hitServer","getErrorCode","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","getResponseText","appDelete_","canceled_","backoffId_","backoff.start","appDelete","backoff.stop","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","addVersionHeader_","firebase","SDK_VERSION","addGmpidHeader_","RequestExports.makeRequest","authWrapperBucket","internals_","ServiceInternals","Service","test","args.validate","args.stringSpec","args.nonNegativeNumberSpec","setMaxUploadRetryTime","setMaxOperationRetryTime","deleteApp","STORAGE_TYPE","factory","container","getProvider","registerStorage","instance","namespaceExports","Storage","INTERNAL","registerComponent","Component","setServiceProps","setMultipleInstances","registerVersion"],"sources":["../src/implementation/constants.ts","../src/implementation/error.ts","../src/implementation/string.ts","../src/implementation/taskenums.ts","../src/implementation/type.ts","../src/implementation/xhrio.ts","../src/implementation/xhrio_network.ts","../src/implementation/xhriopool.ts","../src/implementation/fs.ts","../src/implementation/blob.ts","../src/implementation/location.ts","../src/implementation/json.ts","../src/implementation/path.ts","../src/implementation/url.ts","../src/implementation/metadata.ts","../src/implementation/list.ts","../src/implementation/requestinfo.ts","../src/implementation/requests.ts","../src/implementation/observer.ts","../src/tasksnapshot.ts","../src/implementation/args.ts","../src/implementation/async.ts","../src/task.ts","../src/reference.ts","../src/implementation/failrequest.ts","../src/implementation/requestmap.ts","../src/implementation/authwrapper.ts","../src/implementation/backoff.ts","../src/implementation/request.ts","../src/service.ts","../index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\nexport class FirebaseStorageError implements Error {\n  private code_: string;\n  private message_: string;\n  private serverResponse_: string | null;\n  private name_: string;\n\n  constructor(code: Code, message: string) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  codeProp(): string {\n    return this.code;\n  }\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) === this.codeProp();\n  }\n\n  serverResponseProp(): string | null {\n    return this.serverResponse_;\n  }\n\n  setServerResponseProp(serverResponse: string | null): void {\n    this.serverResponse_ = serverResponse;\n  }\n\n  get name(): string {\n    return this.name_;\n  }\n\n  get code(): string {\n    return this.code_;\n  }\n\n  get message(): string {\n    return this.message_;\n  }\n\n  get serverResponse(): null | string {\n    return this.serverResponse_;\n  }\n}\n\nexport const errors = {};\n\n/**\n * @enum {string}\n */\nexport type Code = string;\nexport const Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nexport function prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(\n  index: number,\n  fnName: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT,\n    'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message\n  );\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format The format that was not valid.\n * @param message A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\n\n/**\n * @enum {string}\n */\nexport type StringFormat = string;\nexport const StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport function formatValidator(stringFormat: unknown): void {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw 'Expected one of the event types: [' +\n        StringFormat.RAW +\n        ', ' +\n        StringFormat.BASE64 +\n        ', ' +\n        StringFormat.BASE64URL +\n        ', ' +\n        StringFormat.DATA_URL +\n        '].';\n  }\n}\n\n/**\n * @struct\n */\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw errorsExports.unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(\n      StringFormat.DATA_URL,\n      'Malformed data URL.'\n    );\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\n/**\n * @struct\n */\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw errorsExports.invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n * @enum {string}\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n * @enum {string}\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n * @enum {string}\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef<T>(p: T | null | undefined): p is T {\n  return p != null;\n}\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: unknown): p is { [key: string]: unknown } | null {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: unknown): p is object {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isInteger(p: unknown): p is number {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nexport function isNumber(p: unknown): p is number {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\nexport interface Headers {\n  [name: string]: string | number;\n}\n\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * @enum{number}\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as type from './type';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw errorsExports.internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (type.isDef(headers)) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (type.isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getErrorCode() before sending'\n      );\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw errorsExports.internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getResponseText() before sending'\n      );\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport * as type from './type';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport * as fs from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport * as type from './type';\n\n/**\n * @param opt_elideCopy If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (type.isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = fs.sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (type.isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(fs.getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (type.isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      '(?:storage.googleapis.com|storage.cloud.google.com)';\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { DEFAULT_HOST } from './constants';\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { AuthWrapper } from './authwrapper';\nimport * as json from './json';\nimport { Location } from './location';\nimport * as path from './path';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Reference } from '../reference';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\n/**\n * @struct\n */\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!type.isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return path.lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size: number | string | undefined\n  ): number | undefined {\n    if (type.isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, authWrapper: AuthWrapper): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return authWrapper.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  authWrapper: AuthWrapper,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, authWrapper);\n  return metadata;\n}\n\nexport function fromResourceString(\n  authWrapper: AuthWrapper,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(authWrapper, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!type.isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = UrlUtils.makeUrl(urlPart);\n    const queryString = UrlUtils.makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Metadata,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n\nexport function metadataValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n  for (const key in p) {\n    if (p.hasOwnProperty(key)) {\n      const val = p[key];\n      if (key === 'customMetadata') {\n        if (!type.isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (type.isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { AuthWrapper } from './authwrapper';\nimport { Location } from './location';\nimport * as json from './json';\nimport * as type from './type';\nimport { ListResult } from '../list';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst MAX_RESULTS_KEY = 'maxResults';\nconst MAX_MAX_RESULTS = 1000;\nconst PAGE_TOKEN_KEY = 'pageToken';\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  authWrapper: AuthWrapper,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = authWrapper.makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = authWrapper.makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  authWrapper: AuthWrapper,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = (obj as unknown) as ListResultResponse;\n  return fromBackendResponse(authWrapper, bucket, resource);\n}\n\nexport function listOptionsValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n  for (const key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (\n        !type.isInteger(p[MAX_RESULTS_KEY]) ||\n        (p[MAX_RESULTS_KEY] as number) <= 0\n      ) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n      if ((p[MAX_RESULTS_KEY] as number) > 1000) {\n        throw `Expected maxResults to be less than or equal to ${MAX_MAX_RESULTS}.`;\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !type.isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { AuthWrapper } from './authwrapper';\nimport { FbsBlob } from './blob';\nimport {\n  FirebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown\n} from './error';\nimport { Location } from './location';\nimport * as MetadataUtils from './metadata';\nimport * as ListResultUtils from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { XhrIo } from './xhrio';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  authWrapper: AuthWrapper,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    const metadata = MetadataUtils.fromResourceString(\n      authWrapper,\n      text,\n      mappings\n    );\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  authWrapper: AuthWrapper,\n  bucket: string\n): (p1: XhrIo, p2: string) => ListResult {\n  function handler(xhr: XhrIo, text: string): ListResult {\n    const listResult = ListResultUtils.fromResponseString(\n      authWrapper,\n      bucket,\n      text\n    );\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  authWrapper: AuthWrapper,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => string | null {\n  function handler(xhr: XhrIo, text: string): string | null {\n    const metadata = MetadataUtils.fromResourceString(\n      authWrapper,\n      text,\n      mappings\n    );\n    handlerCheck(metadata !== null);\n    return MetadataUtils.downloadUrlFromResourceString(\n      metadata as Metadata,\n      text\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = authWrapper.maxOperationRetryTime();\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  authWrapper: AuthWrapper,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = authWrapper.maxOperationRetryTime();\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(authWrapper, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = authWrapper.maxOperationRetryTime();\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  authWrapper: AuthWrapper,\n  location: Location,\n  metadata: Metadata,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'PATCH';\n  const body = MetadataUtils.toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = authWrapper.maxOperationRetryTime();\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  authWrapper: AuthWrapper,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'DELETE';\n  const timeout = authWrapper.maxOperationRetryTime();\n\n  function handler(_xhr: XhrIo, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\nexport function multipartUpload(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str =\n        str +\n        Math.random()\n          .toString()\n          .slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = MetadataUtils.toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const timeout = authWrapper.maxUploadRetryTime();\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(authWrapper, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n * @struct\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, allowed?: string[]): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  authWrapper: AuthWrapper,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = MetadataUtils.toResourceString(metadataForUpload, mappings);\n  const timeout = authWrapper.maxUploadRetryTime();\n\n  function handler(xhr: XhrIo): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(type.isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  authWrapper: AuthWrapper,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = authWrapper.maxUploadRetryTime();\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const resumableUploadChunkSize: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  authWrapper: AuthWrapper,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: MetadataUtils.Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(authWrapper, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = authWrapper.maxUploadRetryTime();\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\nimport { FirebaseStorageError } from './error';\n\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error | FirebaseStorageError) => void;\nexport type CompleteFn = () => void;\nexport type Unsubscribe = () => void;\n\nexport interface StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n}\n\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T> | null,\n  error?: ErrorFn | null,\n  complete?: CompleteFn | null\n) => Unsubscribe;\n\n/**\n * @struct\n */\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T> | null,\n    error?: ErrorFn | null,\n    complete?: CompleteFn | null\n  ) {\n    const asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(error) ||\n      type.isDef(complete);\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      };\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as MetadataUtils from './metadata';\nimport * as ListOptionsUtils from './list';\nimport * as type from './type';\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nexport function validate(\n  name: string,\n  specs: ArgSpec[],\n  passed: IArguments\n): void {\n  let minArgs = specs.length;\n  const maxArgs = specs.length;\n  for (let i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  const validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw errorsExports.invalidArgumentCount(\n      minArgs,\n      maxArgs,\n      name,\n      passed.length\n    );\n  }\n  for (let i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw errorsExports.invalidArgument(i, name, e.message);\n      } else {\n        throw errorsExports.invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n\n/**\n * @struct\n */\nexport class ArgSpec {\n  validator: (p1: unknown) => void;\n  optional: boolean;\n\n  constructor(validator: (p1: unknown) => void, optional?: boolean) {\n    const self = this;\n    this.validator = function(p: unknown) {\n      if (self.optional && !type.isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!optional;\n  }\n}\n\nexport function and_(\n  v1: (p1: unknown) => void,\n  v2: (p1: unknown) => void\n): (p1: unknown) => void {\n  return function(p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nexport function stringSpec(\n  validator?: (p1: unknown) => void | null,\n  optional?: boolean\n): ArgSpec {\n  function stringValidator(p: unknown): void {\n    if (!type.isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  let chainedValidator;\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n  return new ArgSpec(chainedValidator, optional);\n}\n\nexport function uploadDataSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid =\n      p instanceof Uint8Array ||\n      p instanceof ArrayBuffer ||\n      (type.isNativeBlobDefined() && p instanceof Blob);\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function metadataSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(MetadataUtils.metadataValidator, optional);\n}\n\nexport function listOptionSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(ListOptionsUtils.listOptionsValidator, optional);\n}\n\nexport function nonNegativeNumberSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = type.isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function looseObjectSpec(\n  validator?: ((p1: unknown) => void) | null,\n  optional?: boolean\n): ArgSpec {\n  function isLooseObjectValidator(p: unknown): void {\n    const isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nexport function nullFunctionSpec(optional?: boolean): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = p === null || type.isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, optional);\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { FbsBlob } from './implementation/blob';\nimport { FirebaseStorageError, Code, canceled } from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport {\n  ArgSpec,\n  nullFunctionSpec,\n  looseObjectSpec,\n  stringSpec,\n  validate\n} from './implementation/args';\nimport { async as fbsAsync } from './implementation/async';\nimport { Location } from './implementation/location';\nimport * as fbsMetadata from './implementation/metadata';\nimport * as fbsRequests from './implementation/requests';\nimport * as typeUtils from './implementation/type';\nimport { Reference } from './reference';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\nexport class UploadTask {\n  private ref_: Reference;\n  private authWrapper_: AuthWrapper;\n  private location_: Location;\n  private blob_: FbsBlob;\n  private metadata_: Metadata | null;\n  private mappings_: fbsMetadata.Mappings;\n  private transferred_: number = 0;\n  private needToFetchStatus_: boolean = false;\n  private needToFetchMetadata_: boolean = false;\n  private observers_: Array<Observer<UploadTaskSnapshot>> = [];\n  private resumable_: boolean;\n  private state_: InternalTaskState;\n  private error_: Error | null = null;\n  private uploadUrl_: string | null = null;\n  private request_: Request<unknown> | null = null;\n  private chunkMultiplier_: number = 1;\n  private errorHandler_: (p1: FirebaseStorageError) => void;\n  private metadataErrorHandler_: (p1: FirebaseStorageError) => void;\n  private resolve_: ((p1: UploadTaskSnapshot) => void) | null = null;\n  private reject_: ((p1: Error) => void) | null = null;\n  private promise_: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob The blob to upload.\n   */\n  constructor(\n    ref: Reference,\n    authWrapper: AuthWrapper,\n    location: Location,\n    mappings: fbsMetadata.Mappings,\n    blob: FbsBlob,\n    metadata: Metadata | null = null\n  ) {\n    this.ref_ = ref;\n    this.authWrapper_ = authWrapper;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = error => {\n      this.request_ = null;\n      this.chunkMultiplier_ = 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.needToFetchStatus_ = true;\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = error => {\n      this.request_ = null;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, () => {});\n  }\n\n  private makeProgressCallback_(): (p1: number, p2: number) => void {\n    const sizeBefore = this.transferred_;\n    return loaded => this.updateProgress_(sizeBefore + loaded);\n  }\n\n  private shouldDoResumable_(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private start_(): void {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  }\n\n  private resolveToken_(callback: (p1: string | null) => void): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.authWrapper_.getAuthToken().then(authToken => {\n      switch (this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this.transition_(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private createResumable_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.createResumableUpload(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const createRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this.request_ = null;\n        this.uploadUrl_ = url;\n        this.needToFetchStatus_ = false;\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private fetchStatus_(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getResumableUploadStatus(\n        this.authWrapper_,\n        this.location_,\n        url,\n        this.blob_\n      );\n      const statusRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as fbsRequests.ResumableUploadStatus;\n        this.request_ = null;\n        this.updateProgress_(status.current);\n        this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          this.needToFetchMetadata_ = true;\n        }\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private continueUpload_(): void {\n    const chunkSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n    const status = new fbsRequests.ResumableUploadStatus(\n      this.transferred_,\n      this.blob_.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = fbsRequests.continueResumableUpload(\n          this.location_,\n          this.authWrapper_,\n          url,\n          this.blob_,\n          chunkSize,\n          this.mappings_,\n          status,\n          this.makeProgressCallback_()\n        );\n      } catch (e) {\n        this.error_ = e;\n        this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = uploadRequest;\n      uploadRequest\n        .getPromise()\n        .then((newStatus: fbsRequests.ResumableUploadStatus) => {\n          this.increaseMultiplier_();\n          this.request_ = null;\n          this.updateProgress_(newStatus.current);\n          if (newStatus.finalized) {\n            this.metadata_ = newStatus.metadata;\n            this.transition_(InternalTaskState.SUCCESS);\n          } else {\n            this.completeTransitions_();\n          }\n        }, this.errorHandler_);\n    });\n  }\n\n  private increaseMultiplier_(): void {\n    const currentSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  }\n\n  private fetchMetadata_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getMetadata(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_\n      );\n      const metadataRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.metadataErrorHandler_);\n    });\n  }\n\n  private oneShotUpload_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.multipartUpload(\n        this.authWrapper_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const multipartRequest = this.authWrapper_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.updateProgress_(this.blob_.size());\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.errorHandler_);\n    });\n  }\n\n  private updateProgress_(transferred: number): void {\n    const old = this.transferred_;\n    this.transferred_ = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  }\n\n  private transition_(state: InternalTaskState): void {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    return new UploadTaskSnapshot(\n      this.transferred_,\n      this.blob_.size(),\n      externalState,\n      this.metadata_,\n      this,\n      this.ref_\n    );\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type The type of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | NextFn<UploadTaskSnapshot>\n      | StorageObserver<UploadTaskSnapshot>\n      | null,\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    function typeValidator(): void {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw `Expected one of the event types: [${TaskEvent.STATE_CHANGED}].`;\n      }\n    }\n    const nextOrObserverMessage =\n      'Expected a function or an Object with one of ' +\n      '`next`, `error`, `complete` properties.';\n    const nextValidator = nullFunctionSpec(true).validator;\n    const observerValidator = looseObjectSpec(null, true).validator;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function nextOrObserverValidator(p: any): void {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        const anyDefined =\n          typeUtils.isJustDef(p['next']) ||\n          typeUtils.isJustDef(p['error']) ||\n          typeUtils.isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    const specs = [\n      stringSpec(typeValidator),\n      looseObjectSpec(nextOrObserverValidator, true),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    validate('on', specs, arguments);\n    const self = this;\n\n    function makeBinder(\n      specs: ArgSpec[] | null\n    ): Subscribe<UploadTaskSnapshot> {\n      function binder(\n        nextOrObserver?:\n          | NextFn<UploadTaskSnapshot>\n          | StorageObserver<UploadTaskSnapshot>\n          | null,\n        error?: ErrorFn | null,\n        complete?: CompleteFn | null\n      ): () => void {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n        const observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return () => {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p: unknown): void {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    const binderSpecs = [\n      looseObjectSpec(binderNextOrObserverValidator),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    const typeOnly = !(\n      typeUtils.isJustDef(nextOrObserver) ||\n      typeUtils.isJustDef(error) ||\n      typeUtils.isJustDef(completed)\n    );\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: Error) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: Error) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private addObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private removeObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this.observers_.indexOf(observer);\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  }\n\n  private notifyObservers_(): void {\n    this.finishPromise_();\n    const observers = this.observers_.slice();\n    observers.forEach(observer => {\n      this.notifyObserver_(observer);\n    });\n  }\n\n  private finishPromise_(): void {\n    if (this.resolve_ !== null) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this.reject_ as (p1: Error) => void;\n          fbsAsync(toCall.bind(null, this.error_ as Error))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  }\n\n  private notifyObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    validate('resume', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.PAUSED ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    validate('pause', [], arguments);\n    const valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    validate('cancel', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.RUNNING ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { FbsBlob } from './implementation/blob';\nimport * as errorsExports from './implementation/error';\nimport { Location } from './implementation/location';\nimport * as metadata from './implementation/metadata';\nimport * as path from './implementation/path';\nimport * as requests from './implementation/requests';\nimport {\n  StringFormat,\n  formatValidator,\n  dataFromString\n} from './implementation/string';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { Service } from './service';\nimport { UploadTask } from './task';\nimport { ListOptions, ListResult } from './list';\nimport {\n  listOptionSpec,\n  stringSpec,\n  validate,\n  metadataSpec,\n  uploadDataSpec\n} from './implementation/args';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  protected location: Location;\n\n  constructor(protected authWrapper: AuthWrapper, location: string | Location) {\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * @return The URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  }\n\n  protected newRef(authWrapper: AuthWrapper, location: Location): Reference {\n    return new Reference(authWrapper, location);\n  }\n\n  protected mappings(): metadata.Mappings {\n    return metadata.getMappings();\n  }\n\n  /**\n   * @return A reference to the object obtained by\n   *     appending childPath, removing any duplicate, beginning, or trailing\n   *     slashes.\n   */\n  child(childPath: string): Reference {\n    validate('child', [stringSpec()], arguments);\n    const newPath = path.child(this.location.path, childPath);\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  }\n\n  /**\n   * @return A reference to the parent of the\n   *     current object, or null if the current object is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = path.parent(this.location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.authWrapper, location);\n  }\n\n  /**\n   * @return An reference to the root of this\n   *     object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this.location.bucket, '');\n    return this.newRef(this.authWrapper, location);\n  }\n\n  get bucket(): string {\n    return this.location.bucket;\n  }\n\n  get fullPath(): string {\n    return this.location.path;\n  }\n\n  get name(): string {\n    return path.lastComponent(this.location.path);\n  }\n\n  get storage(): Service {\n    return this.authWrapper.service();\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data The blob to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata: Metadata | null = null\n  ): UploadTask {\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(\n      this,\n      this.authWrapper,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data),\n      metadata\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value The string to upload.\n   * @param format The format of the string to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: Metadata\n  ): UploadTask {\n    validate(\n      'putString',\n      [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)],\n      arguments\n    );\n    this.throwIfRoot_('putString');\n    const data = dataFromString(format, value);\n    const metadataClone = Object.assign({}, metadata);\n    if (\n      !type.isDef(metadataClone['contentType']) &&\n      type.isDef(data.contentType)\n    ) {\n      metadataClone['contentType'] = data.contentType!;\n    }\n    return new UploadTask(\n      this,\n      this.authWrapper,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data.data, true),\n      metadataClone\n    );\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @return A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.authWrapper.getAuthToken().then(authToken => {\n      const requestInfo = requests.deleteObject(\n        this.authWrapper,\n        this.location\n      );\n      return this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @return A Promise that resolves with all the items and prefixes under\n   *      the current storage reference. `prefixes` contains references to\n   *      sub-directories and `items` contains references to objects in this\n   *      folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<ListResult> {\n    validate('listAll', [], arguments);\n    const accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(() => accumulator);\n  }\n\n  private async listAllHelper(\n    accumulator: ListResult,\n    pageToken?: string\n  ): Promise<void> {\n    const opt: ListOptions = {\n      // maxResults is 1000 by default.\n      pageToken\n    };\n    const nextPage = await this.list(opt);\n    accumulator.prefixes.push(...nextPage.prefixes);\n    accumulator.items.push(...nextPage.items);\n    if (nextPage.nextPageToken != null) {\n      await this.listAllHelper(accumulator, nextPage.nextPageToken);\n    }\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure.\n   * Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options See ListOptions for details.\n   * @return A Promise that resolves with the items and prefixes.\n   *      `prefixes` contains references to sub-folders and `items`\n   *      contains references to objects in this folder. `nextPageToken`\n   *      can be used to get the rest of the results.\n   */\n  list(options?: ListOptions | null): Promise<ListResult> {\n    validate('list', [listOptionSpec(true)], arguments);\n    const self = this;\n    return this.authWrapper.getAuthToken().then(authToken => {\n      const op = options || {};\n      const requestInfo = requests.list(\n        self.authWrapper,\n        self.location,\n        /*delimiter= */ '/',\n        op.pageToken,\n        op.maxResults\n      );\n      return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   *     A promise that resolves with the metadata for this object. If this\n   *     object doesn't exist or metadata cannot be retreived, the promise is\n   *     rejected.\n   */\n  getMetadata(): Promise<Metadata> {\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.authWrapper.getAuthToken().then(authToken => {\n      const requestInfo = requests.getMetadata(\n        this.authWrapper,\n        this.location,\n        this.mappings()\n      );\n      return this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata The new metadata for the object.\n   *     Only values that have been explicitly set will be changed. Explicitly\n   *     setting a value to null will remove the metadata.\n   * @return A promise that resolves\n   *     with the new metadata for this object.\n   *     @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(metadata: Metadata): Promise<Metadata> {\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.authWrapper.getAuthToken().then(authToken => {\n      const requestInfo = requests.updateMetadata(\n        this.authWrapper,\n        this.location,\n        metadata,\n        this.mappings()\n      );\n      return this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * @return A promise that resolves with the download\n   *     URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.authWrapper.getAuthToken().then(authToken => {\n      const requestInfo = requests.getDownloadUrl(\n        this.authWrapper,\n        this.location,\n        this.mappings()\n      );\n      return this.authWrapper\n        .makeRequest(requestInfo, authToken)\n        .getPromise()\n        .then(url => {\n          if (url === null) {\n            throw errorsExports.noDownloadURL();\n          }\n          return url;\n        });\n    });\n  }\n\n  private throwIfRoot_(name: string): void {\n    if (this.location.path === '') {\n      throw errorsExports.invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Request } from './request';\nimport * as constants from './constants';\n\nexport class RequestMap {\n  private readonly map: Map<number, Request<unknown>> = new Map();\n  private id: number;\n\n  constructor() {\n    this.id = constants.MIN_SAFE_INTEGER;\n  }\n\n  /**\n   * Registers the given request with this map.\n   * The request is unregistered when it completes.\n   *\n   * @param request The request to register.\n   */\n  addRequest(request: Request<unknown>): void {\n    const id = this.id;\n    this.id++;\n    this.map.set(id, request);\n\n    request.getPromise().then(\n      () => this.map.delete(id),\n      () => this.map.delete(id)\n    );\n  }\n\n  /**\n   * Cancels all registered requests.\n   */\n  clear(): void {\n    this.map.forEach(v => {\n      v && v.cancel(true);\n    });\n    this.map.clear();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Reference } from '../reference';\nimport { Service } from '../service';\nimport * as constants from './constants';\nimport * as errorsExports from './error';\nimport { FailRequest } from './failrequest';\nimport { Location } from './location';\nimport { Request } from './request';\nimport { RequestInfo } from './requestinfo';\nimport { requestMaker } from './requestmaker';\nimport { RequestMap } from './requestmap';\nimport * as type from './type';\nimport { XhrIoPool } from './xhriopool';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  FirebaseAuthTokenData\n} from '@firebase/app-types/private';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\n\n/**\n * @param app If null, getAuthToken always resolves with null.\n * @param service The storage service associated with this auth wrapper.\n *     Untyped to avoid circular type dependencies.\n * @struct\n */\nexport class AuthWrapper {\n  private app_: FirebaseApp | null;\n  private authProvider_: Provider<FirebaseAuthInternalName>;\n  private bucket_: string | null = null;\n  private appId_: string | null = null;\n\n  private storageRefMaker_: (p1: AuthWrapper, p2: Location) => Reference;\n  private requestMaker_: requestMaker;\n  private pool_: XhrIoPool;\n  private service_: Service;\n  private maxOperationRetryTime_: number;\n  private maxUploadRetryTime_: number;\n  private requestMap_: RequestMap;\n  private deleted_: boolean = false;\n\n  constructor(\n    app: FirebaseApp | null,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    maker: (p1: AuthWrapper, p2: Location) => Reference,\n    requestMaker: requestMaker,\n    service: Service,\n    pool: XhrIoPool\n  ) {\n    this.app_ = app;\n    if (this.app_ !== null) {\n      const options = this.app_.options;\n      if (type.isDef(options)) {\n        this.bucket_ = AuthWrapper.extractBucket_(options);\n        this.appId_ = options.appId ?? null;\n      }\n    }\n    this.authProvider_ = authProvider;\n    this.storageRefMaker_ = maker;\n    this.requestMaker_ = requestMaker;\n    this.pool_ = pool;\n    this.service_ = service;\n    this.maxOperationRetryTime_ = constants.DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = constants.DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requestMap_ = new RequestMap();\n  }\n\n  private static extractBucket_(config: FirebaseOptions): string | null {\n    const bucketString = config[constants.CONFIG_STORAGE_BUCKET_KEY] || null;\n    if (bucketString == null) {\n      return null;\n    }\n    const loc: Location = Location.makeFromBucketSpec(bucketString);\n    return loc.bucket;\n  }\n\n  getAuthToken(): Promise<string | null> {\n    const auth = this.authProvider_.getImmediate({ optional: true });\n    if (auth) {\n      return auth.getToken().then(\n        (response: FirebaseAuthTokenData | null): string | null => {\n          if (response !== null) {\n            return response.accessToken;\n          } else {\n            return null;\n          }\n        },\n        () => null\n      );\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  bucket(): string | null {\n    if (this.deleted_) {\n      throw errorsExports.appDeleted();\n    } else {\n      return this.bucket_;\n    }\n  }\n\n  /**\n   * The service associated with this auth wrapper. Untyped to avoid circular\n   * type dependencies.\n   */\n  service(): Service {\n    return this.service_;\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\n   * at the given Location.\n   * @param loc The Location.\n   * @return Actually a firebaseStorage.Reference, typing not allowed\n   *     because of circular dependency problems.\n   */\n  makeStorageReference(loc: Location): Reference {\n    return this.storageRefMaker_(this, loc);\n  }\n\n  makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this.deleted_) {\n      const request = this.requestMaker_(\n        requestInfo,\n        this.appId_,\n        authToken,\n        this.pool_\n      );\n      this.requestMap_.addRequest(request);\n      return request;\n    } else {\n      return new FailRequest(errorsExports.appDeleted());\n    }\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  deleteApp(): void {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requestMap_.clear();\n  }\n\n  maxUploadRetryTime(): number {\n    return this.maxUploadRetryTime_;\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    this.maxUploadRetryTime_ = time;\n  }\n\n  maxOperationRetryTime(): number {\n    return this.maxOperationRetryTime_;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    this.maxOperationRetryTime_ = time;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  callback: Function,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport firebase from '@firebase/app';\nimport * as backoff from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\n\n/**\n * @template T\n */\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * @struct\n * @template T\n */\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoff.id | null = null;\n  private resolve_: Function | null = null;\n  private reject_: Function | null = null;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent): void {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then((xhr: XhrIo) => {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          const hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            const wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = self.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ): void {\n      const resolve = self.resolve_ as Function;\n      const reject = self.reject_ as Function;\n      const xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          const result = self.callback_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          const err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      backoff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(headers: Headers): void {\n  const version =\n    typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\n/**\n * @template T\n */\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  pool: XhrIoPool\n): Request<T> {\n  const queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport * as args from './implementation/args';\nimport { AuthWrapper } from './implementation/authwrapper';\nimport { Location } from './implementation/location';\nimport * as RequestExports from './implementation/request';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class Service {\n  authWrapper_: AuthWrapper;\n  private app_: FirebaseApp;\n  private bucket_: Location | null = null;\n  private internals_: ServiceInternals;\n\n  constructor(\n    app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    pool: XhrIoPool,\n    url?: string\n  ) {\n    function maker(authWrapper: AuthWrapper, loc: Location): Reference {\n      return new Reference(authWrapper, loc);\n    }\n    this.authWrapper_ = new AuthWrapper(\n      app,\n      authProvider,\n      maker,\n      RequestExports.makeRequest,\n      this,\n      pool\n    );\n    this.app_ = app;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      const authWrapperBucket = this.authWrapper_.bucket();\n      if (authWrapperBucket != null) {\n        this.bucket_ = new Location(authWrapperBucket, '');\n      }\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: unknown): void {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (/^[A-Za-z]+:\\/\\//.test(path as string)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    const ref = new Reference(this.authWrapper_, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: unknown): void {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (!/^[A-Za-z]+:\\/\\//.test(p as string)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p as string);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this.authWrapper_, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.authWrapper_.maxUploadRetryTime();\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    args.validate(\n      'setMaxUploadRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxUploadRetryTime(time);\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    args.validate(\n      'setMaxOperationRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.authWrapper_.setMaxOperationRetryTime(time);\n  }\n\n  get app(): FirebaseApp {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: Service;\n\n  constructor(service: Service) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   * @see {!fbs.AuthWrapper.prototype.deleteApp}\n   */\n  delete(): Promise<void> {\n    this.service_.authWrapper_.deleteApp();\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { StringFormat } from './src/implementation/string';\nimport { TaskEvent, TaskState } from './src/implementation/taskenums';\n\nimport { XhrIoPool } from './src/implementation/xhriopool';\nimport { Reference } from './src/reference';\nimport { Service } from './src/service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\n\nimport { name, version } from './package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(\n  container: ComponentContainer,\n  url?: string\n): types.FirebaseStorage {\n  // Dependencies\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n\n  return (new Service(\n    app,\n    authProvider,\n    new XhrIoPool(),\n    url\n  ) as unknown) as types.FirebaseStorage;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: Service,\n    Reference\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
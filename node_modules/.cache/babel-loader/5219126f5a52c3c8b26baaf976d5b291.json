{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar group_types_1 = require(\"./group-types\");\n\nvar array_1 = require(\"../helpers/array\");\n\nvar TableGrouper = function () {\n  function TableGrouper() {}\n\n  TableGrouper.prototype.group = function (groups) {\n    var tableBlocked = this.convertTableBlocksToTableGroups(groups);\n    return tableBlocked;\n  };\n\n  TableGrouper.prototype.convertTableBlocksToTableGroups = function (items) {\n    var _this = this;\n\n    var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n      return g instanceof group_types_1.BlockGroup && gPrev instanceof group_types_1.BlockGroup && g.op.isTable() && gPrev.op.isTable();\n    });\n    return grouped.map(function (item) {\n      if (!Array.isArray(item)) {\n        if (item instanceof group_types_1.BlockGroup && item.op.isTable()) {\n          return new group_types_1.TableGroup([new group_types_1.TableRow([new group_types_1.TableCell(item)])]);\n        }\n\n        return item;\n      }\n\n      return new group_types_1.TableGroup(_this.convertTableBlocksToTableRows(item));\n    });\n  };\n\n  TableGrouper.prototype.convertTableBlocksToTableRows = function (items) {\n    var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n      return g instanceof group_types_1.BlockGroup && gPrev instanceof group_types_1.BlockGroup && g.op.isTable() && gPrev.op.isTable() && g.op.isSameTableRowAs(gPrev.op);\n    });\n    return grouped.map(function (item) {\n      return new group_types_1.TableRow(Array.isArray(item) ? item.map(function (it) {\n        return new group_types_1.TableCell(it);\n      }) : [new group_types_1.TableCell(item)]);\n    });\n  };\n\n  return TableGrouper;\n}();\n\nexports.TableGrouper = TableGrouper;","map":{"version":3,"sources":["/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/node_modules/quill-delta-to-html/dist/commonjs/grouper/TableGrouper.js"],"names":["Object","defineProperty","exports","value","group_types_1","require","array_1","TableGrouper","prototype","group","groups","tableBlocked","convertTableBlocksToTableGroups","items","_this","grouped","groupConsecutiveElementsWhile","g","gPrev","BlockGroup","op","isTable","map","item","Array","isArray","TableGroup","TableRow","TableCell","convertTableBlocksToTableRows","isSameTableRowAs","it"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIE,YAAY,GAAI,YAAY;AAC5B,WAASA,YAAT,GAAwB,CACvB;;AACDA,EAAAA,YAAY,CAACC,SAAb,CAAuBC,KAAvB,GAA+B,UAAUC,MAAV,EAAkB;AAC7C,QAAIC,YAAY,GAAG,KAAKC,+BAAL,CAAqCF,MAArC,CAAnB;AACA,WAAOC,YAAP;AACH,GAHD;;AAIAJ,EAAAA,YAAY,CAACC,SAAb,CAAuBI,+BAAvB,GAAyD,UAAUC,KAAV,EAAiB;AACtE,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,OAAO,GAAGT,OAAO,CAACU,6BAAR,CAAsCH,KAAtC,EAA6C,UAAUI,CAAV,EAAaC,KAAb,EAAoB;AAC3E,aAAQD,CAAC,YAAYb,aAAa,CAACe,UAA3B,IACJD,KAAK,YAAYd,aAAa,CAACe,UAD3B,IAEJF,CAAC,CAACG,EAAF,CAAKC,OAAL,EAFI,IAGJH,KAAK,CAACE,EAAN,CAASC,OAAT,EAHJ;AAIH,KALa,CAAd;AAMA,WAAON,OAAO,CAACO,GAAR,CAAY,UAAUC,IAAV,EAAgB;AAC/B,UAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0B;AACtB,YAAIA,IAAI,YAAYnB,aAAa,CAACe,UAA9B,IAA4CI,IAAI,CAACH,EAAL,CAAQC,OAAR,EAAhD,EAAmE;AAC/D,iBAAO,IAAIjB,aAAa,CAACsB,UAAlB,CAA6B,CAAC,IAAItB,aAAa,CAACuB,QAAlB,CAA2B,CAAC,IAAIvB,aAAa,CAACwB,SAAlB,CAA4BL,IAA5B,CAAD,CAA3B,CAAD,CAA7B,CAAP;AACH;;AACD,eAAOA,IAAP;AACH;;AACD,aAAO,IAAInB,aAAa,CAACsB,UAAlB,CAA6BZ,KAAK,CAACe,6BAAN,CAAoCN,IAApC,CAA7B,CAAP;AACH,KARM,CAAP;AASH,GAjBD;;AAkBAhB,EAAAA,YAAY,CAACC,SAAb,CAAuBqB,6BAAvB,GAAuD,UAAUhB,KAAV,EAAiB;AACpE,QAAIE,OAAO,GAAGT,OAAO,CAACU,6BAAR,CAAsCH,KAAtC,EAA6C,UAAUI,CAAV,EAAaC,KAAb,EAAoB;AAC3E,aAAQD,CAAC,YAAYb,aAAa,CAACe,UAA3B,IACJD,KAAK,YAAYd,aAAa,CAACe,UAD3B,IAEJF,CAAC,CAACG,EAAF,CAAKC,OAAL,EAFI,IAGJH,KAAK,CAACE,EAAN,CAASC,OAAT,EAHI,IAIJJ,CAAC,CAACG,EAAF,CAAKU,gBAAL,CAAsBZ,KAAK,CAACE,EAA5B,CAJJ;AAKH,KANa,CAAd;AAOA,WAAOL,OAAO,CAACO,GAAR,CAAY,UAAUC,IAAV,EAAgB;AAC/B,aAAO,IAAInB,aAAa,CAACuB,QAAlB,CAA2BH,KAAK,CAACC,OAAN,CAAcF,IAAd,IAC5BA,IAAI,CAACD,GAAL,CAAS,UAAUS,EAAV,EAAc;AAAE,eAAO,IAAI3B,aAAa,CAACwB,SAAlB,CAA4BG,EAA5B,CAAP;AAAyC,OAAlE,CAD4B,GAE5B,CAAC,IAAI3B,aAAa,CAACwB,SAAlB,CAA4BL,IAA5B,CAAD,CAFC,CAAP;AAGH,KAJM,CAAP;AAKH,GAbD;;AAcA,SAAOhB,YAAP;AACH,CAxCmB,EAApB;;AAyCAL,OAAO,CAACK,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_types_1 = require(\"./group-types\");\nvar array_1 = require(\"../helpers/array\");\nvar TableGrouper = (function () {\n    function TableGrouper() {\n    }\n    TableGrouper.prototype.group = function (groups) {\n        var tableBlocked = this.convertTableBlocksToTableGroups(groups);\n        return tableBlocked;\n    };\n    TableGrouper.prototype.convertTableBlocksToTableGroups = function (items) {\n        var _this = this;\n        var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n            return (g instanceof group_types_1.BlockGroup &&\n                gPrev instanceof group_types_1.BlockGroup &&\n                g.op.isTable() &&\n                gPrev.op.isTable());\n        });\n        return grouped.map(function (item) {\n            if (!Array.isArray(item)) {\n                if (item instanceof group_types_1.BlockGroup && item.op.isTable()) {\n                    return new group_types_1.TableGroup([new group_types_1.TableRow([new group_types_1.TableCell(item)])]);\n                }\n                return item;\n            }\n            return new group_types_1.TableGroup(_this.convertTableBlocksToTableRows(item));\n        });\n    };\n    TableGrouper.prototype.convertTableBlocksToTableRows = function (items) {\n        var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n            return (g instanceof group_types_1.BlockGroup &&\n                gPrev instanceof group_types_1.BlockGroup &&\n                g.op.isTable() &&\n                gPrev.op.isTable() &&\n                g.op.isSameTableRowAs(gPrev.op));\n        });\n        return grouped.map(function (item) {\n            return new group_types_1.TableRow(Array.isArray(item)\n                ? item.map(function (it) { return new group_types_1.TableCell(it); })\n                : [new group_types_1.TableCell(item)]);\n        });\n    };\n    return TableGrouper;\n}());\nexports.TableGrouper = TableGrouper;\n"]},"metadata":{},"sourceType":"script"}
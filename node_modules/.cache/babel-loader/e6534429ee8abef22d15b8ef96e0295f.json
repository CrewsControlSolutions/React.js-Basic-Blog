{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar group_types_1 = require(\"./group-types\");\n\nvar array_1 = require(\"./../helpers/array\");\n\nvar ListNester = function () {\n  function ListNester() {}\n\n  ListNester.prototype.nest = function (groups) {\n    var _this = this;\n\n    var listBlocked = this.convertListBlocksToListGroups(groups);\n    var groupedByListGroups = this.groupConsecutiveListGroups(listBlocked);\n    var nested = array_1.flatten(groupedByListGroups.map(function (group) {\n      if (!Array.isArray(group)) {\n        return group;\n      }\n\n      return _this.nestListSection(group);\n    }));\n    var groupRootLists = array_1.groupConsecutiveElementsWhile(nested, function (curr, prev) {\n      if (!(curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup)) {\n        return false;\n      }\n\n      return curr.items[0].item.op.isSameListAs(prev.items[0].item.op);\n    });\n    return groupRootLists.map(function (v) {\n      if (!Array.isArray(v)) {\n        return v;\n      }\n\n      var litems = v.map(function (g) {\n        return g.items;\n      });\n      return new group_types_1.ListGroup(array_1.flatten(litems));\n    });\n  };\n\n  ListNester.prototype.convertListBlocksToListGroups = function (items) {\n    var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n      return g instanceof group_types_1.BlockGroup && gPrev instanceof group_types_1.BlockGroup && g.op.isList() && gPrev.op.isList() && g.op.isSameListAs(gPrev.op) && g.op.hasSameIndentationAs(gPrev.op);\n    });\n    return grouped.map(function (item) {\n      if (!Array.isArray(item)) {\n        if (item instanceof group_types_1.BlockGroup && item.op.isList()) {\n          return new group_types_1.ListGroup([new group_types_1.ListItem(item)]);\n        }\n\n        return item;\n      }\n\n      return new group_types_1.ListGroup(item.map(function (g) {\n        return new group_types_1.ListItem(g);\n      }));\n    });\n  };\n\n  ListNester.prototype.groupConsecutiveListGroups = function (items) {\n    return array_1.groupConsecutiveElementsWhile(items, function (curr, prev) {\n      return curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup;\n    });\n  };\n\n  ListNester.prototype.nestListSection = function (sectionItems) {\n    var _this = this;\n\n    var indentGroups = this.groupByIndent(sectionItems);\n    Object.keys(indentGroups).map(Number).sort().reverse().forEach(function (indent) {\n      indentGroups[indent].forEach(function (lg) {\n        var idx = sectionItems.indexOf(lg);\n\n        if (_this.placeUnderParent(lg, sectionItems.slice(0, idx))) {\n          sectionItems.splice(idx, 1);\n        }\n      });\n    });\n    return sectionItems;\n  };\n\n  ListNester.prototype.groupByIndent = function (items) {\n    return items.reduce(function (pv, cv) {\n      var indent = cv.items[0].item.op.attributes.indent;\n\n      if (indent) {\n        pv[indent] = pv[indent] || [];\n        pv[indent].push(cv);\n      }\n\n      return pv;\n    }, {});\n  };\n\n  ListNester.prototype.placeUnderParent = function (target, items) {\n    for (var i = items.length - 1; i >= 0; i--) {\n      var elm = items[i];\n\n      if (target.items[0].item.op.hasHigherIndentThan(elm.items[0].item.op)) {\n        var parent = elm.items[elm.items.length - 1];\n\n        if (parent.innerList) {\n          parent.innerList.items = parent.innerList.items.concat(target.items);\n        } else {\n          parent.innerList = target;\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return ListNester;\n}();\n\nexports.ListNester = ListNester;","map":{"version":3,"sources":["/Users/mikecrews/Documents/TechAcademy/GitHub/React.js/blog-project/node_modules/quill-delta-to-html/dist/commonjs/grouper/ListNester.js"],"names":["Object","defineProperty","exports","value","group_types_1","require","array_1","ListNester","prototype","nest","groups","_this","listBlocked","convertListBlocksToListGroups","groupedByListGroups","groupConsecutiveListGroups","nested","flatten","map","group","Array","isArray","nestListSection","groupRootLists","groupConsecutiveElementsWhile","curr","prev","ListGroup","items","item","op","isSameListAs","v","litems","g","grouped","gPrev","BlockGroup","isList","hasSameIndentationAs","ListItem","sectionItems","indentGroups","groupByIndent","keys","Number","sort","reverse","forEach","indent","lg","idx","indexOf","placeUnderParent","slice","splice","reduce","pv","cv","attributes","push","target","i","length","elm","hasHigherIndentThan","parent","innerList","concat"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_types_1 = require(\"./group-types\");\nvar array_1 = require(\"./../helpers/array\");\nvar ListNester = (function () {\n    function ListNester() {\n    }\n    ListNester.prototype.nest = function (groups) {\n        var _this = this;\n        var listBlocked = this.convertListBlocksToListGroups(groups);\n        var groupedByListGroups = this.groupConsecutiveListGroups(listBlocked);\n        var nested = array_1.flatten(groupedByListGroups.map(function (group) {\n            if (!Array.isArray(group)) {\n                return group;\n            }\n            return _this.nestListSection(group);\n        }));\n        var groupRootLists = array_1.groupConsecutiveElementsWhile(nested, function (curr, prev) {\n            if (!(curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup)) {\n                return false;\n            }\n            return curr.items[0].item.op.isSameListAs(prev.items[0].item.op);\n        });\n        return groupRootLists.map(function (v) {\n            if (!Array.isArray(v)) {\n                return v;\n            }\n            var litems = v.map(function (g) { return g.items; });\n            return new group_types_1.ListGroup(array_1.flatten(litems));\n        });\n    };\n    ListNester.prototype.convertListBlocksToListGroups = function (items) {\n        var grouped = array_1.groupConsecutiveElementsWhile(items, function (g, gPrev) {\n            return (g instanceof group_types_1.BlockGroup &&\n                gPrev instanceof group_types_1.BlockGroup &&\n                g.op.isList() &&\n                gPrev.op.isList() &&\n                g.op.isSameListAs(gPrev.op) &&\n                g.op.hasSameIndentationAs(gPrev.op));\n        });\n        return grouped.map(function (item) {\n            if (!Array.isArray(item)) {\n                if (item instanceof group_types_1.BlockGroup && item.op.isList()) {\n                    return new group_types_1.ListGroup([new group_types_1.ListItem(item)]);\n                }\n                return item;\n            }\n            return new group_types_1.ListGroup(item.map(function (g) { return new group_types_1.ListItem(g); }));\n        });\n    };\n    ListNester.prototype.groupConsecutiveListGroups = function (items) {\n        return array_1.groupConsecutiveElementsWhile(items, function (curr, prev) {\n            return curr instanceof group_types_1.ListGroup && prev instanceof group_types_1.ListGroup;\n        });\n    };\n    ListNester.prototype.nestListSection = function (sectionItems) {\n        var _this = this;\n        var indentGroups = this.groupByIndent(sectionItems);\n        Object.keys(indentGroups)\n            .map(Number)\n            .sort()\n            .reverse()\n            .forEach(function (indent) {\n            indentGroups[indent].forEach(function (lg) {\n                var idx = sectionItems.indexOf(lg);\n                if (_this.placeUnderParent(lg, sectionItems.slice(0, idx))) {\n                    sectionItems.splice(idx, 1);\n                }\n            });\n        });\n        return sectionItems;\n    };\n    ListNester.prototype.groupByIndent = function (items) {\n        return items.reduce(function (pv, cv) {\n            var indent = cv.items[0].item.op.attributes.indent;\n            if (indent) {\n                pv[indent] = pv[indent] || [];\n                pv[indent].push(cv);\n            }\n            return pv;\n        }, {});\n    };\n    ListNester.prototype.placeUnderParent = function (target, items) {\n        for (var i = items.length - 1; i >= 0; i--) {\n            var elm = items[i];\n            if (target.items[0].item.op.hasHigherIndentThan(elm.items[0].item.op)) {\n                var parent = elm.items[elm.items.length - 1];\n                if (parent.innerList) {\n                    parent.innerList.items = parent.innerList.items.concat(target.items);\n                }\n                else {\n                    parent.innerList = target;\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    return ListNester;\n}());\nexports.ListNester = ListNester;\n"]},"metadata":{},"sourceType":"script"}